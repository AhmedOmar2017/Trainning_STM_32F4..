
Blinked_LED.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000065c  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080007f0  080007f8  000107f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080007f0  080007f0  000107f8  2**0
                  CONTENTS
  4 .ARM          00000000  080007f0  080007f0  000107f8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080007f0  080007f8  000107f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080007f0  080007f0  000107f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080007f4  080007f4  000107f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000107f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080007f8  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080007f8  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000107f8  2**0
                  CONTENTS, READONLY
 12 .debug_info   000009e4  00000000  00000000  00010822  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000250  00000000  00000000  00011206  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000b8  00000000  00000000  00011458  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000090  00000000  00000000  00011510  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000014b4  00000000  00000000  000115a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000e04  00000000  00000000  00012a54  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00005d84  00000000  00000000  00013858  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000195dc  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000224  00000000  00000000  0001962c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080007d8 	.word	0x080007d8

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	080007d8 	.word	0x080007d8

080001d4 <delay>:
#include "HAL.h"



void delay(void){
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < 500000; i++);
 80001da:	2300      	movs	r3, #0
 80001dc:	607b      	str	r3, [r7, #4]
 80001de:	e002      	b.n	80001e6 <delay+0x12>
 80001e0:	687b      	ldr	r3, [r7, #4]
 80001e2:	3301      	adds	r3, #1
 80001e4:	607b      	str	r3, [r7, #4]
 80001e6:	687b      	ldr	r3, [r7, #4]
 80001e8:	4a04      	ldr	r2, [pc, #16]	; (80001fc <delay+0x28>)
 80001ea:	4293      	cmp	r3, r2
 80001ec:	d9f8      	bls.n	80001e0 <delay+0xc>
}
 80001ee:	bf00      	nop
 80001f0:	bf00      	nop
 80001f2:	370c      	adds	r7, #12
 80001f4:	46bd      	mov	sp, r7
 80001f6:	bc80      	pop	{r7}
 80001f8:	4770      	bx	lr
 80001fa:	bf00      	nop
 80001fc:	0007a11f 	.word	0x0007a11f

08000200 <main>:


int main(void){
 8000200:	b580      	push	{r7, lr}
 8000202:	b086      	sub	sp, #24
 8000204:	af00      	add	r7, sp, #0
	GPIO_Handle  GpioLed,Gpiobtu;
	GpioLed.pGPIOx = GPIOB;
 8000206:	4b1a      	ldr	r3, [pc, #104]	; (8000270 <main+0x70>)
 8000208:	60fb      	str	r3, [r7, #12]
	Gpiobtu.pGPIOx = GPIOA;
 800020a:	4b1a      	ldr	r3, [pc, #104]	; (8000274 <main+0x74>)
 800020c:	603b      	str	r3, [r7, #0]


	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 800020e:	2300      	movs	r3, #0
 8000210:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000212:	2301      	movs	r3, #1
 8000214:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 8000216:	2300      	movs	r3, #0
 8000218:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800021a:	2300      	movs	r3, #0
 800021c:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800021e:	2300      	movs	r3, #0
 8000220:	74fb      	strb	r3, [r7, #19]
	GPIO_PeriClockControl(GPIOB, ENABLE);
 8000222:	2101      	movs	r1, #1
 8000224:	4812      	ldr	r0, [pc, #72]	; (8000270 <main+0x70>)
 8000226:	f000 f827 	bl	8000278 <GPIO_PeriClockControl>
	GPIO_INIT(&GpioLed);
 800022a:	f107 030c 	add.w	r3, r7, #12
 800022e:	4618      	mov	r0, r3
 8000230:	f000 f8e6 	bl	8000400 <GPIO_INIT>


	Gpiobtu.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_2;
 8000234:	2302      	movs	r3, #2
 8000236:	713b      	strb	r3, [r7, #4]
	Gpiobtu.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 8000238:	2300      	movs	r3, #0
 800023a:	717b      	strb	r3, [r7, #5]
	Gpiobtu.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 800023c:	2300      	movs	r3, #0
 800023e:	71bb      	strb	r3, [r7, #6]
	Gpiobtu.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 8000240:	2301      	movs	r3, #1
 8000242:	71fb      	strb	r3, [r7, #7]



	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000244:	2101      	movs	r1, #1
 8000246:	480b      	ldr	r0, [pc, #44]	; (8000274 <main+0x74>)
 8000248:	f000 f816 	bl	8000278 <GPIO_PeriClockControl>
	GPIO_INIT(&Gpiobtu);
 800024c:	463b      	mov	r3, r7
 800024e:	4618      	mov	r0, r3
 8000250:	f000 f8d6 	bl	8000400 <GPIO_INIT>
	while(1){
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_2) == 0){
 8000254:	2102      	movs	r1, #2
 8000256:	4807      	ldr	r0, [pc, #28]	; (8000274 <main+0x74>)
 8000258:	f000 fa46 	bl	80006e8 <GPIO_ReadFromInputPin>
 800025c:	4603      	mov	r3, r0
 800025e:	2b00      	cmp	r3, #0
 8000260:	d1f8      	bne.n	8000254 <main+0x54>
			GPIO_ToggleOutputPin(GPIOB, GPIO_PIN_NO_0);
 8000262:	2100      	movs	r1, #0
 8000264:	4802      	ldr	r0, [pc, #8]	; (8000270 <main+0x70>)
 8000266:	f000 fa54 	bl	8000712 <GPIO_ToggleOutputPin>
			delay();
 800026a:	f7ff ffb3 	bl	80001d4 <delay>
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_2) == 0){
 800026e:	e7f1      	b.n	8000254 <main+0x54>
 8000270:	40020400 	.word	0x40020400
 8000274:	40020000 	.word	0x40020000

08000278 <GPIO_PeriClockControl>:
 * @Note             -  None
 * 
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)

{
 8000278:	b480      	push	{r7}
 800027a:	b083      	sub	sp, #12
 800027c:	af00      	add	r7, sp, #0
 800027e:	6078      	str	r0, [r7, #4]
 8000280:	460b      	mov	r3, r1
 8000282:	70fb      	strb	r3, [r7, #3]
    if(EnorDi == ENABLE){
 8000284:	78fb      	ldrb	r3, [r7, #3]
 8000286:	2b01      	cmp	r3, #1
 8000288:	d141      	bne.n	800030e <GPIO_PeriClockControl+0x96>
        if(pGPIOx == GPIOA){
 800028a:	687b      	ldr	r3, [r7, #4]
 800028c:	4a55      	ldr	r2, [pc, #340]	; (80003e4 <GPIO_PeriClockControl+0x16c>)
 800028e:	4293      	cmp	r3, r2
 8000290:	d106      	bne.n	80002a0 <GPIO_PeriClockControl+0x28>
             GPIOA_PCLK_EN();
 8000292:	4b55      	ldr	r3, [pc, #340]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 8000294:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000296:	4a54      	ldr	r2, [pc, #336]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 8000298:	f043 0301 	orr.w	r3, r3, #1
 800029c:	6313      	str	r3, [r2, #48]	; 0x30
            GPIOH_PCLK_DI();
        }

    }

}
 800029e:	e09b      	b.n	80003d8 <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOB){
 80002a0:	687b      	ldr	r3, [r7, #4]
 80002a2:	4a52      	ldr	r2, [pc, #328]	; (80003ec <GPIO_PeriClockControl+0x174>)
 80002a4:	4293      	cmp	r3, r2
 80002a6:	d106      	bne.n	80002b6 <GPIO_PeriClockControl+0x3e>
            GPIOB_PCLK_EN();
 80002a8:	4b4f      	ldr	r3, [pc, #316]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 80002aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ac:	4a4e      	ldr	r2, [pc, #312]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 80002ae:	f043 0302 	orr.w	r3, r3, #2
 80002b2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002b4:	e090      	b.n	80003d8 <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOC){
 80002b6:	687b      	ldr	r3, [r7, #4]
 80002b8:	4a4d      	ldr	r2, [pc, #308]	; (80003f0 <GPIO_PeriClockControl+0x178>)
 80002ba:	4293      	cmp	r3, r2
 80002bc:	d106      	bne.n	80002cc <GPIO_PeriClockControl+0x54>
            GPIOC_PCLK_EN();
 80002be:	4b4a      	ldr	r3, [pc, #296]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 80002c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002c2:	4a49      	ldr	r2, [pc, #292]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 80002c4:	f043 0304 	orr.w	r3, r3, #4
 80002c8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ca:	e085      	b.n	80003d8 <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOD){
 80002cc:	687b      	ldr	r3, [r7, #4]
 80002ce:	4a49      	ldr	r2, [pc, #292]	; (80003f4 <GPIO_PeriClockControl+0x17c>)
 80002d0:	4293      	cmp	r3, r2
 80002d2:	d106      	bne.n	80002e2 <GPIO_PeriClockControl+0x6a>
            GPIOD_PCLK_EN();
 80002d4:	4b44      	ldr	r3, [pc, #272]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 80002d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002d8:	4a43      	ldr	r2, [pc, #268]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 80002da:	f043 0308 	orr.w	r3, r3, #8
 80002de:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002e0:	e07a      	b.n	80003d8 <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOE){
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	4a44      	ldr	r2, [pc, #272]	; (80003f8 <GPIO_PeriClockControl+0x180>)
 80002e6:	4293      	cmp	r3, r2
 80002e8:	d106      	bne.n	80002f8 <GPIO_PeriClockControl+0x80>
            GPIOE_PCLK_EN();
 80002ea:	4b3f      	ldr	r3, [pc, #252]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 80002ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ee:	4a3e      	ldr	r2, [pc, #248]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 80002f0:	f043 0310 	orr.w	r3, r3, #16
 80002f4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002f6:	e06f      	b.n	80003d8 <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOH){
 80002f8:	687b      	ldr	r3, [r7, #4]
 80002fa:	4a40      	ldr	r2, [pc, #256]	; (80003fc <GPIO_PeriClockControl+0x184>)
 80002fc:	4293      	cmp	r3, r2
 80002fe:	d16b      	bne.n	80003d8 <GPIO_PeriClockControl+0x160>
            GPIOH_PCLK_EN();
 8000300:	4b39      	ldr	r3, [pc, #228]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 8000302:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000304:	4a38      	ldr	r2, [pc, #224]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 8000306:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800030a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800030c:	e064      	b.n	80003d8 <GPIO_PeriClockControl+0x160>
        if(pGPIOx == GPIOA){
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	4a34      	ldr	r2, [pc, #208]	; (80003e4 <GPIO_PeriClockControl+0x16c>)
 8000312:	4293      	cmp	r3, r2
 8000314:	d10c      	bne.n	8000330 <GPIO_PeriClockControl+0xb8>
            GPIOA_PCLK_DI();
 8000316:	4b34      	ldr	r3, [pc, #208]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 8000318:	691b      	ldr	r3, [r3, #16]
 800031a:	4a33      	ldr	r2, [pc, #204]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 800031c:	f043 0301 	orr.w	r3, r3, #1
 8000320:	6113      	str	r3, [r2, #16]
 8000322:	4b31      	ldr	r3, [pc, #196]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 8000324:	691b      	ldr	r3, [r3, #16]
 8000326:	4a30      	ldr	r2, [pc, #192]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 8000328:	f023 0301 	bic.w	r3, r3, #1
 800032c:	6113      	str	r3, [r2, #16]
}
 800032e:	e053      	b.n	80003d8 <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOB){
 8000330:	687b      	ldr	r3, [r7, #4]
 8000332:	4a2e      	ldr	r2, [pc, #184]	; (80003ec <GPIO_PeriClockControl+0x174>)
 8000334:	4293      	cmp	r3, r2
 8000336:	d10c      	bne.n	8000352 <GPIO_PeriClockControl+0xda>
            GPIOB_PCLK_DI();
 8000338:	4b2b      	ldr	r3, [pc, #172]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 800033a:	691b      	ldr	r3, [r3, #16]
 800033c:	4a2a      	ldr	r2, [pc, #168]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 800033e:	f043 0302 	orr.w	r3, r3, #2
 8000342:	6113      	str	r3, [r2, #16]
 8000344:	4b28      	ldr	r3, [pc, #160]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 8000346:	691b      	ldr	r3, [r3, #16]
 8000348:	4a27      	ldr	r2, [pc, #156]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 800034a:	f023 0302 	bic.w	r3, r3, #2
 800034e:	6113      	str	r3, [r2, #16]
}
 8000350:	e042      	b.n	80003d8 <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOC){
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	4a26      	ldr	r2, [pc, #152]	; (80003f0 <GPIO_PeriClockControl+0x178>)
 8000356:	4293      	cmp	r3, r2
 8000358:	d10c      	bne.n	8000374 <GPIO_PeriClockControl+0xfc>
            GPIOC_PCLK_DI();
 800035a:	4b23      	ldr	r3, [pc, #140]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 800035c:	691b      	ldr	r3, [r3, #16]
 800035e:	4a22      	ldr	r2, [pc, #136]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 8000360:	f043 0304 	orr.w	r3, r3, #4
 8000364:	6113      	str	r3, [r2, #16]
 8000366:	4b20      	ldr	r3, [pc, #128]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 8000368:	691b      	ldr	r3, [r3, #16]
 800036a:	4a1f      	ldr	r2, [pc, #124]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 800036c:	f023 0304 	bic.w	r3, r3, #4
 8000370:	6113      	str	r3, [r2, #16]
}
 8000372:	e031      	b.n	80003d8 <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOD){
 8000374:	687b      	ldr	r3, [r7, #4]
 8000376:	4a1f      	ldr	r2, [pc, #124]	; (80003f4 <GPIO_PeriClockControl+0x17c>)
 8000378:	4293      	cmp	r3, r2
 800037a:	d10c      	bne.n	8000396 <GPIO_PeriClockControl+0x11e>
            GPIOD_PCLK_DI();
 800037c:	4b1a      	ldr	r3, [pc, #104]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 800037e:	691b      	ldr	r3, [r3, #16]
 8000380:	4a19      	ldr	r2, [pc, #100]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 8000382:	f043 0308 	orr.w	r3, r3, #8
 8000386:	6113      	str	r3, [r2, #16]
 8000388:	4b17      	ldr	r3, [pc, #92]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 800038a:	691b      	ldr	r3, [r3, #16]
 800038c:	4a16      	ldr	r2, [pc, #88]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 800038e:	f023 0308 	bic.w	r3, r3, #8
 8000392:	6113      	str	r3, [r2, #16]
}
 8000394:	e020      	b.n	80003d8 <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOE){
 8000396:	687b      	ldr	r3, [r7, #4]
 8000398:	4a17      	ldr	r2, [pc, #92]	; (80003f8 <GPIO_PeriClockControl+0x180>)
 800039a:	4293      	cmp	r3, r2
 800039c:	d10c      	bne.n	80003b8 <GPIO_PeriClockControl+0x140>
            GPIOE_PCLK_DI();
 800039e:	4b12      	ldr	r3, [pc, #72]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 80003a0:	691b      	ldr	r3, [r3, #16]
 80003a2:	4a11      	ldr	r2, [pc, #68]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 80003a4:	f043 0310 	orr.w	r3, r3, #16
 80003a8:	6113      	str	r3, [r2, #16]
 80003aa:	4b0f      	ldr	r3, [pc, #60]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 80003ac:	691b      	ldr	r3, [r3, #16]
 80003ae:	4a0e      	ldr	r2, [pc, #56]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 80003b0:	f023 0310 	bic.w	r3, r3, #16
 80003b4:	6113      	str	r3, [r2, #16]
}
 80003b6:	e00f      	b.n	80003d8 <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOH){
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	4a10      	ldr	r2, [pc, #64]	; (80003fc <GPIO_PeriClockControl+0x184>)
 80003bc:	4293      	cmp	r3, r2
 80003be:	d10b      	bne.n	80003d8 <GPIO_PeriClockControl+0x160>
            GPIOH_PCLK_DI();
 80003c0:	4b09      	ldr	r3, [pc, #36]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 80003c2:	691b      	ldr	r3, [r3, #16]
 80003c4:	4a08      	ldr	r2, [pc, #32]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 80003c6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003ca:	6113      	str	r3, [r2, #16]
 80003cc:	4b06      	ldr	r3, [pc, #24]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 80003ce:	691b      	ldr	r3, [r3, #16]
 80003d0:	4a05      	ldr	r2, [pc, #20]	; (80003e8 <GPIO_PeriClockControl+0x170>)
 80003d2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80003d6:	6113      	str	r3, [r2, #16]
}
 80003d8:	bf00      	nop
 80003da:	370c      	adds	r7, #12
 80003dc:	46bd      	mov	sp, r7
 80003de:	bc80      	pop	{r7}
 80003e0:	4770      	bx	lr
 80003e2:	bf00      	nop
 80003e4:	40020000 	.word	0x40020000
 80003e8:	40023800 	.word	0x40023800
 80003ec:	40020400 	.word	0x40020400
 80003f0:	40020800 	.word	0x40020800
 80003f4:	40020c00 	.word	0x40020c00
 80003f8:	40021000 	.word	0x40021000
 80003fc:	40021c00 	.word	0x40021c00

08000400 <GPIO_INIT>:
 * @Note             -  None
 * 
 */

void GPIO_INIT(GPIO_Handle *pGPIO_Handle)
{
 8000400:	b480      	push	{r7}
 8000402:	b087      	sub	sp, #28
 8000404:	af00      	add	r7, sp, #0
 8000406:	6078      	str	r0, [r7, #4]
    uint32_t temp = 0;
 8000408:	2300      	movs	r3, #0
 800040a:	617b      	str	r3, [r7, #20]
    //1. Configure the mode of gpio pin
    if(pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	795b      	ldrb	r3, [r3, #5]
 8000410:	2b03      	cmp	r3, #3
 8000412:	d81f      	bhi.n	8000454 <GPIO_INIT+0x54>
        // non intruppt mode
        temp = (pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 8000414:	687b      	ldr	r3, [r7, #4]
 8000416:	795b      	ldrb	r3, [r3, #5]
 8000418:	461a      	mov	r2, r3
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	791b      	ldrb	r3, [r3, #4]
 800041e:	005b      	lsls	r3, r3, #1
 8000420:	fa02 f303 	lsl.w	r3, r2, r3
 8000424:	617b      	str	r3, [r7, #20]
        pGPIO_Handle->pGPIOx->MODER &= ~(0x3 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);                                           /*<It's clearing two bits before writing on it>*/
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	681b      	ldr	r3, [r3, #0]
 800042a:	681a      	ldr	r2, [r3, #0]
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	791b      	ldrb	r3, [r3, #4]
 8000430:	4619      	mov	r1, r3
 8000432:	2303      	movs	r3, #3
 8000434:	408b      	lsls	r3, r1
 8000436:	43db      	mvns	r3, r3
 8000438:	4619      	mov	r1, r3
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	681b      	ldr	r3, [r3, #0]
 800043e:	400a      	ands	r2, r1
 8000440:	601a      	str	r2, [r3, #0]
        pGPIO_Handle->pGPIOx->MODER |= temp;
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	681b      	ldr	r3, [r3, #0]
 8000446:	6819      	ldr	r1, [r3, #0]
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	681b      	ldr	r3, [r3, #0]
 800044c:	697a      	ldr	r2, [r7, #20]
 800044e:	430a      	orrs	r2, r1
 8000450:	601a      	str	r2, [r3, #0]
 8000452:	e09b      	b.n	800058c <GPIO_INIT+0x18c>

    }else{
	// interrupt mode
    	    if(pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT){
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	795b      	ldrb	r3, [r3, #5]
 8000458:	2b04      	cmp	r3, #4
 800045a:	d117      	bne.n	800048c <GPIO_INIT+0x8c>
				EXTI->FTSR |= (1 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 800045c:	4b9a      	ldr	r3, [pc, #616]	; (80006c8 <GPIO_INIT+0x2c8>)
 800045e:	68db      	ldr	r3, [r3, #12]
 8000460:	687a      	ldr	r2, [r7, #4]
 8000462:	7912      	ldrb	r2, [r2, #4]
 8000464:	4611      	mov	r1, r2
 8000466:	2201      	movs	r2, #1
 8000468:	408a      	lsls	r2, r1
 800046a:	4611      	mov	r1, r2
 800046c:	4a96      	ldr	r2, [pc, #600]	; (80006c8 <GPIO_INIT+0x2c8>)
 800046e:	430b      	orrs	r3, r1
 8000470:	60d3      	str	r3, [r2, #12]
				EXTI->RTSR &= ~(1 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 8000472:	4b95      	ldr	r3, [pc, #596]	; (80006c8 <GPIO_INIT+0x2c8>)
 8000474:	689b      	ldr	r3, [r3, #8]
 8000476:	687a      	ldr	r2, [r7, #4]
 8000478:	7912      	ldrb	r2, [r2, #4]
 800047a:	4611      	mov	r1, r2
 800047c:	2201      	movs	r2, #1
 800047e:	408a      	lsls	r2, r1
 8000480:	43d2      	mvns	r2, r2
 8000482:	4611      	mov	r1, r2
 8000484:	4a90      	ldr	r2, [pc, #576]	; (80006c8 <GPIO_INIT+0x2c8>)
 8000486:	400b      	ands	r3, r1
 8000488:	6093      	str	r3, [r2, #8]
 800048a:	e035      	b.n	80004f8 <GPIO_INIT+0xf8>
			}else if (pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 800048c:	687b      	ldr	r3, [r7, #4]
 800048e:	795b      	ldrb	r3, [r3, #5]
 8000490:	2b05      	cmp	r3, #5
 8000492:	d117      	bne.n	80004c4 <GPIO_INIT+0xc4>
				EXTI->RTSR |= (1 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 8000494:	4b8c      	ldr	r3, [pc, #560]	; (80006c8 <GPIO_INIT+0x2c8>)
 8000496:	689b      	ldr	r3, [r3, #8]
 8000498:	687a      	ldr	r2, [r7, #4]
 800049a:	7912      	ldrb	r2, [r2, #4]
 800049c:	4611      	mov	r1, r2
 800049e:	2201      	movs	r2, #1
 80004a0:	408a      	lsls	r2, r1
 80004a2:	4611      	mov	r1, r2
 80004a4:	4a88      	ldr	r2, [pc, #544]	; (80006c8 <GPIO_INIT+0x2c8>)
 80004a6:	430b      	orrs	r3, r1
 80004a8:	6093      	str	r3, [r2, #8]
				EXTI->FTSR &= ~(1 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 80004aa:	4b87      	ldr	r3, [pc, #540]	; (80006c8 <GPIO_INIT+0x2c8>)
 80004ac:	68db      	ldr	r3, [r3, #12]
 80004ae:	687a      	ldr	r2, [r7, #4]
 80004b0:	7912      	ldrb	r2, [r2, #4]
 80004b2:	4611      	mov	r1, r2
 80004b4:	2201      	movs	r2, #1
 80004b6:	408a      	lsls	r2, r1
 80004b8:	43d2      	mvns	r2, r2
 80004ba:	4611      	mov	r1, r2
 80004bc:	4a82      	ldr	r2, [pc, #520]	; (80006c8 <GPIO_INIT+0x2c8>)
 80004be:	400b      	ands	r3, r1
 80004c0:	60d3      	str	r3, [r2, #12]
 80004c2:	e019      	b.n	80004f8 <GPIO_INIT+0xf8>
			}else if(pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_RFT){
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	795b      	ldrb	r3, [r3, #5]
 80004c8:	2b06      	cmp	r3, #6
 80004ca:	d115      	bne.n	80004f8 <GPIO_INIT+0xf8>
				EXTI->FTSR |= (1 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 80004cc:	4b7e      	ldr	r3, [pc, #504]	; (80006c8 <GPIO_INIT+0x2c8>)
 80004ce:	68db      	ldr	r3, [r3, #12]
 80004d0:	687a      	ldr	r2, [r7, #4]
 80004d2:	7912      	ldrb	r2, [r2, #4]
 80004d4:	4611      	mov	r1, r2
 80004d6:	2201      	movs	r2, #1
 80004d8:	408a      	lsls	r2, r1
 80004da:	4611      	mov	r1, r2
 80004dc:	4a7a      	ldr	r2, [pc, #488]	; (80006c8 <GPIO_INIT+0x2c8>)
 80004de:	430b      	orrs	r3, r1
 80004e0:	60d3      	str	r3, [r2, #12]
				EXTI->RTSR |= (1 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 80004e2:	4b79      	ldr	r3, [pc, #484]	; (80006c8 <GPIO_INIT+0x2c8>)
 80004e4:	689b      	ldr	r3, [r3, #8]
 80004e6:	687a      	ldr	r2, [r7, #4]
 80004e8:	7912      	ldrb	r2, [r2, #4]
 80004ea:	4611      	mov	r1, r2
 80004ec:	2201      	movs	r2, #1
 80004ee:	408a      	lsls	r2, r1
 80004f0:	4611      	mov	r1, r2
 80004f2:	4a75      	ldr	r2, [pc, #468]	; (80006c8 <GPIO_INIT+0x2c8>)
 80004f4:	430b      	orrs	r3, r1
 80004f6:	6093      	str	r3, [r2, #8]
			}

			uint8_t temp1 = pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber / 4;
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	791b      	ldrb	r3, [r3, #4]
 80004fc:	089b      	lsrs	r3, r3, #2
 80004fe:	74fb      	strb	r3, [r7, #19]
			uint8_t temp2 = pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber % 4;
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	791b      	ldrb	r3, [r3, #4]
 8000504:	f003 0303 	and.w	r3, r3, #3
 8000508:	74bb      	strb	r3, [r7, #18]
			uint8_t PORTCODE = GPIO_BASE_ADDR_TO_CODE(pGPIO_Handle->pGPIOx);
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	681b      	ldr	r3, [r3, #0]
 800050e:	4a6f      	ldr	r2, [pc, #444]	; (80006cc <GPIO_INIT+0x2cc>)
 8000510:	4293      	cmp	r3, r2
 8000512:	d024      	beq.n	800055e <GPIO_INIT+0x15e>
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	4a6d      	ldr	r2, [pc, #436]	; (80006d0 <GPIO_INIT+0x2d0>)
 800051a:	4293      	cmp	r3, r2
 800051c:	d01d      	beq.n	800055a <GPIO_INIT+0x15a>
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	681b      	ldr	r3, [r3, #0]
 8000522:	4a6c      	ldr	r2, [pc, #432]	; (80006d4 <GPIO_INIT+0x2d4>)
 8000524:	4293      	cmp	r3, r2
 8000526:	d016      	beq.n	8000556 <GPIO_INIT+0x156>
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	681b      	ldr	r3, [r3, #0]
 800052c:	4a6a      	ldr	r2, [pc, #424]	; (80006d8 <GPIO_INIT+0x2d8>)
 800052e:	4293      	cmp	r3, r2
 8000530:	d00f      	beq.n	8000552 <GPIO_INIT+0x152>
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	4a69      	ldr	r2, [pc, #420]	; (80006dc <GPIO_INIT+0x2dc>)
 8000538:	4293      	cmp	r3, r2
 800053a:	d008      	beq.n	800054e <GPIO_INIT+0x14e>
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	681b      	ldr	r3, [r3, #0]
 8000540:	4a67      	ldr	r2, [pc, #412]	; (80006e0 <GPIO_INIT+0x2e0>)
 8000542:	4293      	cmp	r3, r2
 8000544:	d101      	bne.n	800054a <GPIO_INIT+0x14a>
 8000546:	2307      	movs	r3, #7
 8000548:	e00a      	b.n	8000560 <GPIO_INIT+0x160>
 800054a:	2300      	movs	r3, #0
 800054c:	e008      	b.n	8000560 <GPIO_INIT+0x160>
 800054e:	2304      	movs	r3, #4
 8000550:	e006      	b.n	8000560 <GPIO_INIT+0x160>
 8000552:	2303      	movs	r3, #3
 8000554:	e004      	b.n	8000560 <GPIO_INIT+0x160>
 8000556:	2302      	movs	r3, #2
 8000558:	e002      	b.n	8000560 <GPIO_INIT+0x160>
 800055a:	2301      	movs	r3, #1
 800055c:	e000      	b.n	8000560 <GPIO_INIT+0x160>
 800055e:	2300      	movs	r3, #0
 8000560:	747b      	strb	r3, [r7, #17]
			SYSCFG->EXTICR[temp1] = PORTCODE << (temp2 * 4);                                                                            /*<It is GPIO port output @GPIO_PIN_SPEED register   >*/
 8000562:	7c7a      	ldrb	r2, [r7, #17]
 8000564:	7cbb      	ldrb	r3, [r7, #18]
 8000566:	009b      	lsls	r3, r3, #2
 8000568:	fa02 f103 	lsl.w	r1, r2, r3
 800056c:	4a5d      	ldr	r2, [pc, #372]	; (80006e4 <GPIO_INIT+0x2e4>)
 800056e:	7cfb      	ldrb	r3, [r7, #19]
 8000570:	3302      	adds	r3, #2
 8000572:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

			EXTI->IMR |= 1 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber;
 8000576:	4b54      	ldr	r3, [pc, #336]	; (80006c8 <GPIO_INIT+0x2c8>)
 8000578:	681b      	ldr	r3, [r3, #0]
 800057a:	687a      	ldr	r2, [r7, #4]
 800057c:	7912      	ldrb	r2, [r2, #4]
 800057e:	4611      	mov	r1, r2
 8000580:	2201      	movs	r2, #1
 8000582:	408a      	lsls	r2, r1
 8000584:	4611      	mov	r1, r2
 8000586:	4a50      	ldr	r2, [pc, #320]	; (80006c8 <GPIO_INIT+0x2c8>)
 8000588:	430b      	orrs	r3, r1
 800058a:	6013      	str	r3, [r2, #0]
    	    }

    temp = 0;
 800058c:	2300      	movs	r3, #0
 800058e:	617b      	str	r3, [r7, #20]

    // configure the speed
    temp = (pGPIO_Handle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	799b      	ldrb	r3, [r3, #6]
 8000594:	461a      	mov	r2, r3
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	791b      	ldrb	r3, [r3, #4]
 800059a:	005b      	lsls	r3, r3, #1
 800059c:	fa02 f303 	lsl.w	r3, r2, r3
 80005a0:	617b      	str	r3, [r7, #20]
    pGPIO_Handle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);                                          /*<It's clearing two bits before writing on it>*/
 80005a2:	687b      	ldr	r3, [r7, #4]
 80005a4:	681b      	ldr	r3, [r3, #0]
 80005a6:	689a      	ldr	r2, [r3, #8]
 80005a8:	687b      	ldr	r3, [r7, #4]
 80005aa:	791b      	ldrb	r3, [r3, #4]
 80005ac:	4619      	mov	r1, r3
 80005ae:	2303      	movs	r3, #3
 80005b0:	408b      	lsls	r3, r1
 80005b2:	43db      	mvns	r3, r3
 80005b4:	4619      	mov	r1, r3
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	681b      	ldr	r3, [r3, #0]
 80005ba:	400a      	ands	r2, r1
 80005bc:	609a      	str	r2, [r3, #8]
    pGPIO_Handle->pGPIOx->OSPEEDR |= temp;
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	681b      	ldr	r3, [r3, #0]
 80005c2:	6899      	ldr	r1, [r3, #8]
 80005c4:	687b      	ldr	r3, [r7, #4]
 80005c6:	681b      	ldr	r3, [r3, #0]
 80005c8:	697a      	ldr	r2, [r7, #20]
 80005ca:	430a      	orrs	r2, r1
 80005cc:	609a      	str	r2, [r3, #8]
    temp = 0;
 80005ce:	2300      	movs	r3, #0
 80005d0:	617b      	str	r3, [r7, #20]

    //3. configration the pupd
    temp = (pGPIO_Handle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	79db      	ldrb	r3, [r3, #7]
 80005d6:	461a      	mov	r2, r3
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	791b      	ldrb	r3, [r3, #4]
 80005dc:	005b      	lsls	r3, r3, #1
 80005de:	fa02 f303 	lsl.w	r3, r2, r3
 80005e2:	617b      	str	r3, [r7, #20]
    pGPIO_Handle->pGPIOx->PUPDR &= ~(0x3 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);                                            /*<It's clearing two bits before writing on it>*/
 80005e4:	687b      	ldr	r3, [r7, #4]
 80005e6:	681b      	ldr	r3, [r3, #0]
 80005e8:	68da      	ldr	r2, [r3, #12]
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	791b      	ldrb	r3, [r3, #4]
 80005ee:	4619      	mov	r1, r3
 80005f0:	2303      	movs	r3, #3
 80005f2:	408b      	lsls	r3, r1
 80005f4:	43db      	mvns	r3, r3
 80005f6:	4619      	mov	r1, r3
 80005f8:	687b      	ldr	r3, [r7, #4]
 80005fa:	681b      	ldr	r3, [r3, #0]
 80005fc:	400a      	ands	r2, r1
 80005fe:	60da      	str	r2, [r3, #12]
    pGPIO_Handle->pGPIOx->PUPDR |= temp;
 8000600:	687b      	ldr	r3, [r7, #4]
 8000602:	681b      	ldr	r3, [r3, #0]
 8000604:	68d9      	ldr	r1, [r3, #12]
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	681b      	ldr	r3, [r3, #0]
 800060a:	697a      	ldr	r2, [r7, #20]
 800060c:	430a      	orrs	r2, r1
 800060e:	60da      	str	r2, [r3, #12]

    //4. configuration the optype.
    temp = 0; 
 8000610:	2300      	movs	r3, #0
 8000612:	617b      	str	r3, [r7, #20]
    temp = (pGPIO_Handle->GPIO_PinConfig.GPIO_PinOPType << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 8000614:	687b      	ldr	r3, [r7, #4]
 8000616:	7a1b      	ldrb	r3, [r3, #8]
 8000618:	461a      	mov	r2, r3
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	791b      	ldrb	r3, [r3, #4]
 800061e:	fa02 f303 	lsl.w	r3, r2, r3
 8000622:	617b      	str	r3, [r7, #20]
    pGPIO_Handle->pGPIOx->OTYPER &= ~(0x1 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);                                           /*<It's clearing two bits before writing on it>*/
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	681b      	ldr	r3, [r3, #0]
 8000628:	685a      	ldr	r2, [r3, #4]
 800062a:	687b      	ldr	r3, [r7, #4]
 800062c:	791b      	ldrb	r3, [r3, #4]
 800062e:	4619      	mov	r1, r3
 8000630:	2301      	movs	r3, #1
 8000632:	408b      	lsls	r3, r1
 8000634:	43db      	mvns	r3, r3
 8000636:	4619      	mov	r1, r3
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	400a      	ands	r2, r1
 800063e:	605a      	str	r2, [r3, #4]
    pGPIO_Handle->pGPIOx->OTYPER |= temp;
 8000640:	687b      	ldr	r3, [r7, #4]
 8000642:	681b      	ldr	r3, [r3, #0]
 8000644:	6859      	ldr	r1, [r3, #4]
 8000646:	687b      	ldr	r3, [r7, #4]
 8000648:	681b      	ldr	r3, [r3, #0]
 800064a:	697a      	ldr	r2, [r7, #20]
 800064c:	430a      	orrs	r2, r1
 800064e:	605a      	str	r2, [r3, #4]

    // 5. configure the alt function reg
    if(pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 8000650:	687b      	ldr	r3, [r7, #4]
 8000652:	795b      	ldrb	r3, [r3, #5]
 8000654:	2b02      	cmp	r3, #2
 8000656:	d131      	bne.n	80006bc <GPIO_INIT+0x2bc>
        uint8_t temp1, temp2;
        temp1 = pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000658:	687b      	ldr	r3, [r7, #4]
 800065a:	791b      	ldrb	r3, [r3, #4]
 800065c:	08db      	lsrs	r3, r3, #3
 800065e:	743b      	strb	r3, [r7, #16]
        temp2 = pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000660:	687b      	ldr	r3, [r7, #4]
 8000662:	791b      	ldrb	r3, [r3, #4]
 8000664:	f003 0307 	and.w	r3, r3, #7
 8000668:	73fb      	strb	r3, [r7, #15]
        pGPIO_Handle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));                                                                   /*<It's clearing two bits before writing on it>*/
 800066a:	687b      	ldr	r3, [r7, #4]
 800066c:	681b      	ldr	r3, [r3, #0]
 800066e:	7c3a      	ldrb	r2, [r7, #16]
 8000670:	3208      	adds	r2, #8
 8000672:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000676:	7bfb      	ldrb	r3, [r7, #15]
 8000678:	009b      	lsls	r3, r3, #2
 800067a:	220f      	movs	r2, #15
 800067c:	fa02 f303 	lsl.w	r3, r2, r3
 8000680:	43db      	mvns	r3, r3
 8000682:	4618      	mov	r0, r3
 8000684:	687b      	ldr	r3, [r7, #4]
 8000686:	681b      	ldr	r3, [r3, #0]
 8000688:	7c3a      	ldrb	r2, [r7, #16]
 800068a:	4001      	ands	r1, r0
 800068c:	3208      	adds	r2, #8
 800068e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
        pGPIO_Handle->pGPIOx->AFR[temp1] |= (pGPIO_Handle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 8000692:	687b      	ldr	r3, [r7, #4]
 8000694:	681b      	ldr	r3, [r3, #0]
 8000696:	7c3a      	ldrb	r2, [r7, #16]
 8000698:	3208      	adds	r2, #8
 800069a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800069e:	687b      	ldr	r3, [r7, #4]
 80006a0:	7a5b      	ldrb	r3, [r3, #9]
 80006a2:	461a      	mov	r2, r3
 80006a4:	7bfb      	ldrb	r3, [r7, #15]
 80006a6:	009b      	lsls	r3, r3, #2
 80006a8:	fa02 f303 	lsl.w	r3, r2, r3
 80006ac:	4618      	mov	r0, r3
 80006ae:	687b      	ldr	r3, [r7, #4]
 80006b0:	681b      	ldr	r3, [r3, #0]
 80006b2:	7c3a      	ldrb	r2, [r7, #16]
 80006b4:	4301      	orrs	r1, r0
 80006b6:	3208      	adds	r2, #8
 80006b8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

    }
}
 80006bc:	bf00      	nop
 80006be:	371c      	adds	r7, #28
 80006c0:	46bd      	mov	sp, r7
 80006c2:	bc80      	pop	{r7}
 80006c4:	4770      	bx	lr
 80006c6:	bf00      	nop
 80006c8:	40013c00 	.word	0x40013c00
 80006cc:	40020000 	.word	0x40020000
 80006d0:	40020400 	.word	0x40020400
 80006d4:	40020800 	.word	0x40020800
 80006d8:	40020c00 	.word	0x40020c00
 80006dc:	40021000 	.word	0x40021000
 80006e0:	40021c00 	.word	0x40021c00
 80006e4:	40013800 	.word	0x40013800

080006e8 <GPIO_ReadFromInputPin>:

/*
 * Read & Write GPIO pin & port
 */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80006e8:	b480      	push	{r7}
 80006ea:	b085      	sub	sp, #20
 80006ec:	af00      	add	r7, sp, #0
 80006ee:	6078      	str	r0, [r7, #4]
 80006f0:	460b      	mov	r3, r1
 80006f2:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value = (uint8_t)  ((pGPIOx->IDR >> PinNumber) & 0x00000001);
 80006f4:	687b      	ldr	r3, [r7, #4]
 80006f6:	691a      	ldr	r2, [r3, #16]
 80006f8:	78fb      	ldrb	r3, [r7, #3]
 80006fa:	fa22 f303 	lsr.w	r3, r2, r3
 80006fe:	b2db      	uxtb	r3, r3
 8000700:	f003 0301 	and.w	r3, r3, #1
 8000704:	73fb      	strb	r3, [r7, #15]
	return value;
 8000706:	7bfb      	ldrb	r3, [r7, #15]
}
 8000708:	4618      	mov	r0, r3
 800070a:	3714      	adds	r7, #20
 800070c:	46bd      	mov	sp, r7
 800070e:	bc80      	pop	{r7}
 8000710:	4770      	bx	lr

08000712 <GPIO_ToggleOutputPin>:
	pGPIOx->ODR = Value;
}


void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000712:	b480      	push	{r7}
 8000714:	b083      	sub	sp, #12
 8000716:	af00      	add	r7, sp, #0
 8000718:	6078      	str	r0, [r7, #4]
 800071a:	460b      	mov	r3, r1
 800071c:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1<< PinNumber);
 800071e:	687b      	ldr	r3, [r7, #4]
 8000720:	695b      	ldr	r3, [r3, #20]
 8000722:	78fa      	ldrb	r2, [r7, #3]
 8000724:	2101      	movs	r1, #1
 8000726:	fa01 f202 	lsl.w	r2, r1, r2
 800072a:	405a      	eors	r2, r3
 800072c:	687b      	ldr	r3, [r7, #4]
 800072e:	615a      	str	r2, [r3, #20]
}
 8000730:	bf00      	nop
 8000732:	370c      	adds	r7, #12
 8000734:	46bd      	mov	sp, r7
 8000736:	bc80      	pop	{r7}
 8000738:	4770      	bx	lr
	...

0800073c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800073c:	480d      	ldr	r0, [pc, #52]	; (8000774 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800073e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000740:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000744:	480c      	ldr	r0, [pc, #48]	; (8000778 <LoopForever+0x6>)
  ldr r1, =_edata
 8000746:	490d      	ldr	r1, [pc, #52]	; (800077c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000748:	4a0d      	ldr	r2, [pc, #52]	; (8000780 <LoopForever+0xe>)
  movs r3, #0
 800074a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800074c:	e002      	b.n	8000754 <LoopCopyDataInit>

0800074e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800074e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000750:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000752:	3304      	adds	r3, #4

08000754 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000754:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000756:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000758:	d3f9      	bcc.n	800074e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800075a:	4a0a      	ldr	r2, [pc, #40]	; (8000784 <LoopForever+0x12>)
  ldr r4, =_ebss
 800075c:	4c0a      	ldr	r4, [pc, #40]	; (8000788 <LoopForever+0x16>)
  movs r3, #0
 800075e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000760:	e001      	b.n	8000766 <LoopFillZerobss>

08000762 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000762:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000764:	3204      	adds	r2, #4

08000766 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000766:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000768:	d3fb      	bcc.n	8000762 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800076a:	f000 f811 	bl	8000790 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800076e:	f7ff fd47 	bl	8000200 <main>

08000772 <LoopForever>:

LoopForever:
    b LoopForever
 8000772:	e7fe      	b.n	8000772 <LoopForever>
  ldr   r0, =_estack
 8000774:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8000778:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800077c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000780:	080007f8 	.word	0x080007f8
  ldr r2, =_sbss
 8000784:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000788:	2000001c 	.word	0x2000001c

0800078c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800078c:	e7fe      	b.n	800078c <ADC_IRQHandler>
	...

08000790 <__libc_init_array>:
 8000790:	b570      	push	{r4, r5, r6, lr}
 8000792:	4d0d      	ldr	r5, [pc, #52]	; (80007c8 <__libc_init_array+0x38>)
 8000794:	4c0d      	ldr	r4, [pc, #52]	; (80007cc <__libc_init_array+0x3c>)
 8000796:	1b64      	subs	r4, r4, r5
 8000798:	10a4      	asrs	r4, r4, #2
 800079a:	2600      	movs	r6, #0
 800079c:	42a6      	cmp	r6, r4
 800079e:	d109      	bne.n	80007b4 <__libc_init_array+0x24>
 80007a0:	4d0b      	ldr	r5, [pc, #44]	; (80007d0 <__libc_init_array+0x40>)
 80007a2:	4c0c      	ldr	r4, [pc, #48]	; (80007d4 <__libc_init_array+0x44>)
 80007a4:	f000 f818 	bl	80007d8 <_init>
 80007a8:	1b64      	subs	r4, r4, r5
 80007aa:	10a4      	asrs	r4, r4, #2
 80007ac:	2600      	movs	r6, #0
 80007ae:	42a6      	cmp	r6, r4
 80007b0:	d105      	bne.n	80007be <__libc_init_array+0x2e>
 80007b2:	bd70      	pop	{r4, r5, r6, pc}
 80007b4:	f855 3b04 	ldr.w	r3, [r5], #4
 80007b8:	4798      	blx	r3
 80007ba:	3601      	adds	r6, #1
 80007bc:	e7ee      	b.n	800079c <__libc_init_array+0xc>
 80007be:	f855 3b04 	ldr.w	r3, [r5], #4
 80007c2:	4798      	blx	r3
 80007c4:	3601      	adds	r6, #1
 80007c6:	e7f2      	b.n	80007ae <__libc_init_array+0x1e>
 80007c8:	080007f0 	.word	0x080007f0
 80007cc:	080007f0 	.word	0x080007f0
 80007d0:	080007f0 	.word	0x080007f0
 80007d4:	080007f4 	.word	0x080007f4

080007d8 <_init>:
 80007d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007da:	bf00      	nop
 80007dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007de:	bc08      	pop	{r3}
 80007e0:	469e      	mov	lr, r3
 80007e2:	4770      	bx	lr

080007e4 <_fini>:
 80007e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007e6:	bf00      	nop
 80007e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007ea:	bc08      	pop	{r3}
 80007ec:	469e      	mov	lr, r3
 80007ee:	4770      	bx	lr
