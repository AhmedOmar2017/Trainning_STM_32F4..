
Blinked_LED.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000007f0  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000984  0800098c  0001098c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000984  08000984  0001098c  2**0
                  CONTENTS
  4 .ARM          00000000  08000984  08000984  0001098c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000984  0800098c  0001098c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000984  08000984  00010984  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000988  08000988  00010988  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001098c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800098c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800098c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  0001098c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a53  00000000  00000000  000109b6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000271  00000000  00000000  00011409  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c0  00000000  00000000  00011680  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000098  00000000  00000000  00011740  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001efa  00000000  00000000  000117d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000010f3  00000000  00000000  000136d2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00008e74  00000000  00000000  000147c5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0001d639  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000260  00000000  00000000  0001d68c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	0800096c 	.word	0x0800096c

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	0800096c 	.word	0x0800096c

080001d4 <delay>:
#include "HAL.h"



void delay(void){
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < 500000; i++);
 80001da:	2300      	movs	r3, #0
 80001dc:	607b      	str	r3, [r7, #4]
 80001de:	e002      	b.n	80001e6 <delay+0x12>
 80001e0:	687b      	ldr	r3, [r7, #4]
 80001e2:	3301      	adds	r3, #1
 80001e4:	607b      	str	r3, [r7, #4]
 80001e6:	687b      	ldr	r3, [r7, #4]
 80001e8:	4a04      	ldr	r2, [pc, #16]	; (80001fc <delay+0x28>)
 80001ea:	4293      	cmp	r3, r2
 80001ec:	d9f8      	bls.n	80001e0 <delay+0xc>
}
 80001ee:	bf00      	nop
 80001f0:	bf00      	nop
 80001f2:	370c      	adds	r7, #12
 80001f4:	46bd      	mov	sp, r7
 80001f6:	bc80      	pop	{r7}
 80001f8:	4770      	bx	lr
 80001fa:	bf00      	nop
 80001fc:	0007a11f 	.word	0x0007a11f

08000200 <main>:


int main(void){
 8000200:	b580      	push	{r7, lr}
 8000202:	b086      	sub	sp, #24
 8000204:	af00      	add	r7, sp, #0
	GPIO_Handle  GpioLed,Gpiobtu;
	memset(&GpioLed,0,sizeof(GpioLed));
 8000206:	f107 030c 	add.w	r3, r7, #12
 800020a:	220c      	movs	r2, #12
 800020c:	2100      	movs	r1, #0
 800020e:	4618      	mov	r0, r3
 8000210:	f000 fba4 	bl	800095c <memset>
	memset(&Gpiobtu,0,sizeof(Gpiobtu));
 8000214:	463b      	mov	r3, r7
 8000216:	220c      	movs	r2, #12
 8000218:	2100      	movs	r1, #0
 800021a:	4618      	mov	r0, r3
 800021c:	f000 fb9e 	bl	800095c <memset>
	GpioLed.pGPIOx = GPIOB;
 8000220:	4b16      	ldr	r3, [pc, #88]	; (800027c <main+0x7c>)
 8000222:	60fb      	str	r3, [r7, #12]
	Gpiobtu.pGPIOx = GPIOA;
 8000224:	4b16      	ldr	r3, [pc, #88]	; (8000280 <main+0x80>)
 8000226:	603b      	str	r3, [r7, #0]


	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_1;
 8000228:	2301      	movs	r3, #1
 800022a:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800022c:	2301      	movs	r3, #1
 800022e:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 8000230:	2300      	movs	r3, #0
 8000232:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000234:	2300      	movs	r3, #0
 8000236:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000238:	2300      	movs	r3, #0
 800023a:	74fb      	strb	r3, [r7, #19]
	GPIO_PeriClockControl(GPIOB, ENABLE);
 800023c:	2101      	movs	r1, #1
 800023e:	480f      	ldr	r0, [pc, #60]	; (800027c <main+0x7c>)
 8000240:	f000 f830 	bl	80002a4 <GPIO_PeriClockControl>
	GPIO_INIT(&GpioLed);
 8000244:	f107 030c 	add.w	r3, r7, #12
 8000248:	4618      	mov	r0, r3
 800024a:	f000 f8ef 	bl	800042c <GPIO_INIT>


	Gpiobtu.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_2;
 800024e:	2302      	movs	r3, #2
 8000250:	713b      	strb	r3, [r7, #4]
	Gpiobtu.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000252:	2304      	movs	r3, #4
 8000254:	717b      	strb	r3, [r7, #5]
	Gpiobtu.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 8000256:	2300      	movs	r3, #0
 8000258:	71bb      	strb	r3, [r7, #6]
	Gpiobtu.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 800025a:	2301      	movs	r3, #1
 800025c:	71fb      	strb	r3, [r7, #7]



	GPIO_PeriClockControl(GPIOA, ENABLE);
 800025e:	2101      	movs	r1, #1
 8000260:	4807      	ldr	r0, [pc, #28]	; (8000280 <main+0x80>)
 8000262:	f000 f81f 	bl	80002a4 <GPIO_PeriClockControl>
	GPIO_INIT(&Gpiobtu);
 8000266:	463b      	mov	r3, r7
 8000268:	4618      	mov	r0, r3
 800026a:	f000 f8df 	bl	800042c <GPIO_INIT>
	GPIO_IRQConfig(IRQ_NO_EXTI2, 15, ENABLE);
 800026e:	2201      	movs	r2, #1
 8000270:	210f      	movs	r1, #15
 8000272:	2008      	movs	r0, #8
 8000274:	f000 fa62 	bl	800073c <GPIO_IRQConfig>
	while(1);
 8000278:	e7fe      	b.n	8000278 <main+0x78>
 800027a:	bf00      	nop
 800027c:	40020400 	.word	0x40020400
 8000280:	40020000 	.word	0x40020000

08000284 <EXTI2_IRQHandler>:
	return 0;

}


void EXTI2_IRQHandler(void){
 8000284:	b580      	push	{r7, lr}
 8000286:	af00      	add	r7, sp, #0
	delay();
 8000288:	f7ff ffa4 	bl	80001d4 <delay>
	GPIO_IRQHandling(GPIO_PIN_NO_2);
 800028c:	2002      	movs	r0, #2
 800028e:	f000 faf7 	bl	8000880 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOB, GPIO_PIN_NO_1);
 8000292:	2101      	movs	r1, #1
 8000294:	4802      	ldr	r0, [pc, #8]	; (80002a0 <EXTI2_IRQHandler+0x1c>)
 8000296:	f000 fa3d 	bl	8000714 <GPIO_ToggleOutputPin>
}
 800029a:	bf00      	nop
 800029c:	bd80      	pop	{r7, pc}
 800029e:	bf00      	nop
 80002a0:	40020400 	.word	0x40020400

080002a4 <GPIO_PeriClockControl>:
 * @Note             -  None
 * 
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)

{
 80002a4:	b480      	push	{r7}
 80002a6:	b083      	sub	sp, #12
 80002a8:	af00      	add	r7, sp, #0
 80002aa:	6078      	str	r0, [r7, #4]
 80002ac:	460b      	mov	r3, r1
 80002ae:	70fb      	strb	r3, [r7, #3]
    if(EnorDi == ENABLE){
 80002b0:	78fb      	ldrb	r3, [r7, #3]
 80002b2:	2b01      	cmp	r3, #1
 80002b4:	d141      	bne.n	800033a <GPIO_PeriClockControl+0x96>
        if(pGPIOx == GPIOA){
 80002b6:	687b      	ldr	r3, [r7, #4]
 80002b8:	4a55      	ldr	r2, [pc, #340]	; (8000410 <GPIO_PeriClockControl+0x16c>)
 80002ba:	4293      	cmp	r3, r2
 80002bc:	d106      	bne.n	80002cc <GPIO_PeriClockControl+0x28>
             GPIOA_PCLK_EN();
 80002be:	4b55      	ldr	r3, [pc, #340]	; (8000414 <GPIO_PeriClockControl+0x170>)
 80002c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002c2:	4a54      	ldr	r2, [pc, #336]	; (8000414 <GPIO_PeriClockControl+0x170>)
 80002c4:	f043 0301 	orr.w	r3, r3, #1
 80002c8:	6313      	str	r3, [r2, #48]	; 0x30
            GPIOH_PCLK_DI();
        }

    }

}
 80002ca:	e09b      	b.n	8000404 <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOB){
 80002cc:	687b      	ldr	r3, [r7, #4]
 80002ce:	4a52      	ldr	r2, [pc, #328]	; (8000418 <GPIO_PeriClockControl+0x174>)
 80002d0:	4293      	cmp	r3, r2
 80002d2:	d106      	bne.n	80002e2 <GPIO_PeriClockControl+0x3e>
            GPIOB_PCLK_EN();
 80002d4:	4b4f      	ldr	r3, [pc, #316]	; (8000414 <GPIO_PeriClockControl+0x170>)
 80002d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002d8:	4a4e      	ldr	r2, [pc, #312]	; (8000414 <GPIO_PeriClockControl+0x170>)
 80002da:	f043 0302 	orr.w	r3, r3, #2
 80002de:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002e0:	e090      	b.n	8000404 <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOC){
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	4a4d      	ldr	r2, [pc, #308]	; (800041c <GPIO_PeriClockControl+0x178>)
 80002e6:	4293      	cmp	r3, r2
 80002e8:	d106      	bne.n	80002f8 <GPIO_PeriClockControl+0x54>
            GPIOC_PCLK_EN();
 80002ea:	4b4a      	ldr	r3, [pc, #296]	; (8000414 <GPIO_PeriClockControl+0x170>)
 80002ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ee:	4a49      	ldr	r2, [pc, #292]	; (8000414 <GPIO_PeriClockControl+0x170>)
 80002f0:	f043 0304 	orr.w	r3, r3, #4
 80002f4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002f6:	e085      	b.n	8000404 <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOD){
 80002f8:	687b      	ldr	r3, [r7, #4]
 80002fa:	4a49      	ldr	r2, [pc, #292]	; (8000420 <GPIO_PeriClockControl+0x17c>)
 80002fc:	4293      	cmp	r3, r2
 80002fe:	d106      	bne.n	800030e <GPIO_PeriClockControl+0x6a>
            GPIOD_PCLK_EN();
 8000300:	4b44      	ldr	r3, [pc, #272]	; (8000414 <GPIO_PeriClockControl+0x170>)
 8000302:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000304:	4a43      	ldr	r2, [pc, #268]	; (8000414 <GPIO_PeriClockControl+0x170>)
 8000306:	f043 0308 	orr.w	r3, r3, #8
 800030a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800030c:	e07a      	b.n	8000404 <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOE){
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	4a44      	ldr	r2, [pc, #272]	; (8000424 <GPIO_PeriClockControl+0x180>)
 8000312:	4293      	cmp	r3, r2
 8000314:	d106      	bne.n	8000324 <GPIO_PeriClockControl+0x80>
            GPIOE_PCLK_EN();
 8000316:	4b3f      	ldr	r3, [pc, #252]	; (8000414 <GPIO_PeriClockControl+0x170>)
 8000318:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800031a:	4a3e      	ldr	r2, [pc, #248]	; (8000414 <GPIO_PeriClockControl+0x170>)
 800031c:	f043 0310 	orr.w	r3, r3, #16
 8000320:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000322:	e06f      	b.n	8000404 <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOH){
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	4a40      	ldr	r2, [pc, #256]	; (8000428 <GPIO_PeriClockControl+0x184>)
 8000328:	4293      	cmp	r3, r2
 800032a:	d16b      	bne.n	8000404 <GPIO_PeriClockControl+0x160>
            GPIOH_PCLK_EN();
 800032c:	4b39      	ldr	r3, [pc, #228]	; (8000414 <GPIO_PeriClockControl+0x170>)
 800032e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000330:	4a38      	ldr	r2, [pc, #224]	; (8000414 <GPIO_PeriClockControl+0x170>)
 8000332:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000336:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000338:	e064      	b.n	8000404 <GPIO_PeriClockControl+0x160>
        if(pGPIOx == GPIOA){
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	4a34      	ldr	r2, [pc, #208]	; (8000410 <GPIO_PeriClockControl+0x16c>)
 800033e:	4293      	cmp	r3, r2
 8000340:	d10c      	bne.n	800035c <GPIO_PeriClockControl+0xb8>
            GPIOA_PCLK_DI();
 8000342:	4b34      	ldr	r3, [pc, #208]	; (8000414 <GPIO_PeriClockControl+0x170>)
 8000344:	691b      	ldr	r3, [r3, #16]
 8000346:	4a33      	ldr	r2, [pc, #204]	; (8000414 <GPIO_PeriClockControl+0x170>)
 8000348:	f043 0301 	orr.w	r3, r3, #1
 800034c:	6113      	str	r3, [r2, #16]
 800034e:	4b31      	ldr	r3, [pc, #196]	; (8000414 <GPIO_PeriClockControl+0x170>)
 8000350:	691b      	ldr	r3, [r3, #16]
 8000352:	4a30      	ldr	r2, [pc, #192]	; (8000414 <GPIO_PeriClockControl+0x170>)
 8000354:	f023 0301 	bic.w	r3, r3, #1
 8000358:	6113      	str	r3, [r2, #16]
}
 800035a:	e053      	b.n	8000404 <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOB){
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	4a2e      	ldr	r2, [pc, #184]	; (8000418 <GPIO_PeriClockControl+0x174>)
 8000360:	4293      	cmp	r3, r2
 8000362:	d10c      	bne.n	800037e <GPIO_PeriClockControl+0xda>
            GPIOB_PCLK_DI();
 8000364:	4b2b      	ldr	r3, [pc, #172]	; (8000414 <GPIO_PeriClockControl+0x170>)
 8000366:	691b      	ldr	r3, [r3, #16]
 8000368:	4a2a      	ldr	r2, [pc, #168]	; (8000414 <GPIO_PeriClockControl+0x170>)
 800036a:	f043 0302 	orr.w	r3, r3, #2
 800036e:	6113      	str	r3, [r2, #16]
 8000370:	4b28      	ldr	r3, [pc, #160]	; (8000414 <GPIO_PeriClockControl+0x170>)
 8000372:	691b      	ldr	r3, [r3, #16]
 8000374:	4a27      	ldr	r2, [pc, #156]	; (8000414 <GPIO_PeriClockControl+0x170>)
 8000376:	f023 0302 	bic.w	r3, r3, #2
 800037a:	6113      	str	r3, [r2, #16]
}
 800037c:	e042      	b.n	8000404 <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOC){
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	4a26      	ldr	r2, [pc, #152]	; (800041c <GPIO_PeriClockControl+0x178>)
 8000382:	4293      	cmp	r3, r2
 8000384:	d10c      	bne.n	80003a0 <GPIO_PeriClockControl+0xfc>
            GPIOC_PCLK_DI();
 8000386:	4b23      	ldr	r3, [pc, #140]	; (8000414 <GPIO_PeriClockControl+0x170>)
 8000388:	691b      	ldr	r3, [r3, #16]
 800038a:	4a22      	ldr	r2, [pc, #136]	; (8000414 <GPIO_PeriClockControl+0x170>)
 800038c:	f043 0304 	orr.w	r3, r3, #4
 8000390:	6113      	str	r3, [r2, #16]
 8000392:	4b20      	ldr	r3, [pc, #128]	; (8000414 <GPIO_PeriClockControl+0x170>)
 8000394:	691b      	ldr	r3, [r3, #16]
 8000396:	4a1f      	ldr	r2, [pc, #124]	; (8000414 <GPIO_PeriClockControl+0x170>)
 8000398:	f023 0304 	bic.w	r3, r3, #4
 800039c:	6113      	str	r3, [r2, #16]
}
 800039e:	e031      	b.n	8000404 <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOD){
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	4a1f      	ldr	r2, [pc, #124]	; (8000420 <GPIO_PeriClockControl+0x17c>)
 80003a4:	4293      	cmp	r3, r2
 80003a6:	d10c      	bne.n	80003c2 <GPIO_PeriClockControl+0x11e>
            GPIOD_PCLK_DI();
 80003a8:	4b1a      	ldr	r3, [pc, #104]	; (8000414 <GPIO_PeriClockControl+0x170>)
 80003aa:	691b      	ldr	r3, [r3, #16]
 80003ac:	4a19      	ldr	r2, [pc, #100]	; (8000414 <GPIO_PeriClockControl+0x170>)
 80003ae:	f043 0308 	orr.w	r3, r3, #8
 80003b2:	6113      	str	r3, [r2, #16]
 80003b4:	4b17      	ldr	r3, [pc, #92]	; (8000414 <GPIO_PeriClockControl+0x170>)
 80003b6:	691b      	ldr	r3, [r3, #16]
 80003b8:	4a16      	ldr	r2, [pc, #88]	; (8000414 <GPIO_PeriClockControl+0x170>)
 80003ba:	f023 0308 	bic.w	r3, r3, #8
 80003be:	6113      	str	r3, [r2, #16]
}
 80003c0:	e020      	b.n	8000404 <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOE){
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	4a17      	ldr	r2, [pc, #92]	; (8000424 <GPIO_PeriClockControl+0x180>)
 80003c6:	4293      	cmp	r3, r2
 80003c8:	d10c      	bne.n	80003e4 <GPIO_PeriClockControl+0x140>
            GPIOE_PCLK_DI();
 80003ca:	4b12      	ldr	r3, [pc, #72]	; (8000414 <GPIO_PeriClockControl+0x170>)
 80003cc:	691b      	ldr	r3, [r3, #16]
 80003ce:	4a11      	ldr	r2, [pc, #68]	; (8000414 <GPIO_PeriClockControl+0x170>)
 80003d0:	f043 0310 	orr.w	r3, r3, #16
 80003d4:	6113      	str	r3, [r2, #16]
 80003d6:	4b0f      	ldr	r3, [pc, #60]	; (8000414 <GPIO_PeriClockControl+0x170>)
 80003d8:	691b      	ldr	r3, [r3, #16]
 80003da:	4a0e      	ldr	r2, [pc, #56]	; (8000414 <GPIO_PeriClockControl+0x170>)
 80003dc:	f023 0310 	bic.w	r3, r3, #16
 80003e0:	6113      	str	r3, [r2, #16]
}
 80003e2:	e00f      	b.n	8000404 <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOH){
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	4a10      	ldr	r2, [pc, #64]	; (8000428 <GPIO_PeriClockControl+0x184>)
 80003e8:	4293      	cmp	r3, r2
 80003ea:	d10b      	bne.n	8000404 <GPIO_PeriClockControl+0x160>
            GPIOH_PCLK_DI();
 80003ec:	4b09      	ldr	r3, [pc, #36]	; (8000414 <GPIO_PeriClockControl+0x170>)
 80003ee:	691b      	ldr	r3, [r3, #16]
 80003f0:	4a08      	ldr	r2, [pc, #32]	; (8000414 <GPIO_PeriClockControl+0x170>)
 80003f2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003f6:	6113      	str	r3, [r2, #16]
 80003f8:	4b06      	ldr	r3, [pc, #24]	; (8000414 <GPIO_PeriClockControl+0x170>)
 80003fa:	691b      	ldr	r3, [r3, #16]
 80003fc:	4a05      	ldr	r2, [pc, #20]	; (8000414 <GPIO_PeriClockControl+0x170>)
 80003fe:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000402:	6113      	str	r3, [r2, #16]
}
 8000404:	bf00      	nop
 8000406:	370c      	adds	r7, #12
 8000408:	46bd      	mov	sp, r7
 800040a:	bc80      	pop	{r7}
 800040c:	4770      	bx	lr
 800040e:	bf00      	nop
 8000410:	40020000 	.word	0x40020000
 8000414:	40023800 	.word	0x40023800
 8000418:	40020400 	.word	0x40020400
 800041c:	40020800 	.word	0x40020800
 8000420:	40020c00 	.word	0x40020c00
 8000424:	40021000 	.word	0x40021000
 8000428:	40021c00 	.word	0x40021c00

0800042c <GPIO_INIT>:
 * @Note             -  None
 * 
 */

void GPIO_INIT(GPIO_Handle *pGPIO_Handle)
{
 800042c:	b480      	push	{r7}
 800042e:	b087      	sub	sp, #28
 8000430:	af00      	add	r7, sp, #0
 8000432:	6078      	str	r0, [r7, #4]
    uint32_t temp = 0;
 8000434:	2300      	movs	r3, #0
 8000436:	617b      	str	r3, [r7, #20]
    //1. Configure the mode of gpio pin
    if(pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	795b      	ldrb	r3, [r3, #5]
 800043c:	2b03      	cmp	r3, #3
 800043e:	d81f      	bhi.n	8000480 <GPIO_INIT+0x54>
        // non intruppt mode
        temp = (pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	795b      	ldrb	r3, [r3, #5]
 8000444:	461a      	mov	r2, r3
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	791b      	ldrb	r3, [r3, #4]
 800044a:	005b      	lsls	r3, r3, #1
 800044c:	fa02 f303 	lsl.w	r3, r2, r3
 8000450:	617b      	str	r3, [r7, #20]
        pGPIO_Handle->pGPIOx->MODER &= ~(0x3 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);                                           /*<It's clearing two bits before writing on it>*/
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	681b      	ldr	r3, [r3, #0]
 8000456:	681a      	ldr	r2, [r3, #0]
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	791b      	ldrb	r3, [r3, #4]
 800045c:	4619      	mov	r1, r3
 800045e:	2303      	movs	r3, #3
 8000460:	408b      	lsls	r3, r1
 8000462:	43db      	mvns	r3, r3
 8000464:	4619      	mov	r1, r3
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	681b      	ldr	r3, [r3, #0]
 800046a:	400a      	ands	r2, r1
 800046c:	601a      	str	r2, [r3, #0]
        pGPIO_Handle->pGPIOx->MODER |= temp;
 800046e:	687b      	ldr	r3, [r7, #4]
 8000470:	681b      	ldr	r3, [r3, #0]
 8000472:	6819      	ldr	r1, [r3, #0]
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	681b      	ldr	r3, [r3, #0]
 8000478:	697a      	ldr	r2, [r7, #20]
 800047a:	430a      	orrs	r2, r1
 800047c:	601a      	str	r2, [r3, #0]
 800047e:	e09b      	b.n	80005b8 <GPIO_INIT+0x18c>

    }else{
	// interrupt mode
    	    if(pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT){
 8000480:	687b      	ldr	r3, [r7, #4]
 8000482:	795b      	ldrb	r3, [r3, #5]
 8000484:	2b04      	cmp	r3, #4
 8000486:	d117      	bne.n	80004b8 <GPIO_INIT+0x8c>
				EXTI->FTSR |= (1 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 8000488:	4b9a      	ldr	r3, [pc, #616]	; (80006f4 <GPIO_INIT+0x2c8>)
 800048a:	68db      	ldr	r3, [r3, #12]
 800048c:	687a      	ldr	r2, [r7, #4]
 800048e:	7912      	ldrb	r2, [r2, #4]
 8000490:	4611      	mov	r1, r2
 8000492:	2201      	movs	r2, #1
 8000494:	408a      	lsls	r2, r1
 8000496:	4611      	mov	r1, r2
 8000498:	4a96      	ldr	r2, [pc, #600]	; (80006f4 <GPIO_INIT+0x2c8>)
 800049a:	430b      	orrs	r3, r1
 800049c:	60d3      	str	r3, [r2, #12]
				EXTI->RTSR &= ~(1 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 800049e:	4b95      	ldr	r3, [pc, #596]	; (80006f4 <GPIO_INIT+0x2c8>)
 80004a0:	689b      	ldr	r3, [r3, #8]
 80004a2:	687a      	ldr	r2, [r7, #4]
 80004a4:	7912      	ldrb	r2, [r2, #4]
 80004a6:	4611      	mov	r1, r2
 80004a8:	2201      	movs	r2, #1
 80004aa:	408a      	lsls	r2, r1
 80004ac:	43d2      	mvns	r2, r2
 80004ae:	4611      	mov	r1, r2
 80004b0:	4a90      	ldr	r2, [pc, #576]	; (80006f4 <GPIO_INIT+0x2c8>)
 80004b2:	400b      	ands	r3, r1
 80004b4:	6093      	str	r3, [r2, #8]
 80004b6:	e035      	b.n	8000524 <GPIO_INIT+0xf8>
			}else if (pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 80004b8:	687b      	ldr	r3, [r7, #4]
 80004ba:	795b      	ldrb	r3, [r3, #5]
 80004bc:	2b05      	cmp	r3, #5
 80004be:	d117      	bne.n	80004f0 <GPIO_INIT+0xc4>
				EXTI->RTSR |= (1 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 80004c0:	4b8c      	ldr	r3, [pc, #560]	; (80006f4 <GPIO_INIT+0x2c8>)
 80004c2:	689b      	ldr	r3, [r3, #8]
 80004c4:	687a      	ldr	r2, [r7, #4]
 80004c6:	7912      	ldrb	r2, [r2, #4]
 80004c8:	4611      	mov	r1, r2
 80004ca:	2201      	movs	r2, #1
 80004cc:	408a      	lsls	r2, r1
 80004ce:	4611      	mov	r1, r2
 80004d0:	4a88      	ldr	r2, [pc, #544]	; (80006f4 <GPIO_INIT+0x2c8>)
 80004d2:	430b      	orrs	r3, r1
 80004d4:	6093      	str	r3, [r2, #8]
				EXTI->FTSR &= ~(1 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 80004d6:	4b87      	ldr	r3, [pc, #540]	; (80006f4 <GPIO_INIT+0x2c8>)
 80004d8:	68db      	ldr	r3, [r3, #12]
 80004da:	687a      	ldr	r2, [r7, #4]
 80004dc:	7912      	ldrb	r2, [r2, #4]
 80004de:	4611      	mov	r1, r2
 80004e0:	2201      	movs	r2, #1
 80004e2:	408a      	lsls	r2, r1
 80004e4:	43d2      	mvns	r2, r2
 80004e6:	4611      	mov	r1, r2
 80004e8:	4a82      	ldr	r2, [pc, #520]	; (80006f4 <GPIO_INIT+0x2c8>)
 80004ea:	400b      	ands	r3, r1
 80004ec:	60d3      	str	r3, [r2, #12]
 80004ee:	e019      	b.n	8000524 <GPIO_INIT+0xf8>
			}else if(pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_RFT){
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	795b      	ldrb	r3, [r3, #5]
 80004f4:	2b06      	cmp	r3, #6
 80004f6:	d115      	bne.n	8000524 <GPIO_INIT+0xf8>
				EXTI->FTSR |= (1 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 80004f8:	4b7e      	ldr	r3, [pc, #504]	; (80006f4 <GPIO_INIT+0x2c8>)
 80004fa:	68db      	ldr	r3, [r3, #12]
 80004fc:	687a      	ldr	r2, [r7, #4]
 80004fe:	7912      	ldrb	r2, [r2, #4]
 8000500:	4611      	mov	r1, r2
 8000502:	2201      	movs	r2, #1
 8000504:	408a      	lsls	r2, r1
 8000506:	4611      	mov	r1, r2
 8000508:	4a7a      	ldr	r2, [pc, #488]	; (80006f4 <GPIO_INIT+0x2c8>)
 800050a:	430b      	orrs	r3, r1
 800050c:	60d3      	str	r3, [r2, #12]
				EXTI->RTSR |= (1 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 800050e:	4b79      	ldr	r3, [pc, #484]	; (80006f4 <GPIO_INIT+0x2c8>)
 8000510:	689b      	ldr	r3, [r3, #8]
 8000512:	687a      	ldr	r2, [r7, #4]
 8000514:	7912      	ldrb	r2, [r2, #4]
 8000516:	4611      	mov	r1, r2
 8000518:	2201      	movs	r2, #1
 800051a:	408a      	lsls	r2, r1
 800051c:	4611      	mov	r1, r2
 800051e:	4a75      	ldr	r2, [pc, #468]	; (80006f4 <GPIO_INIT+0x2c8>)
 8000520:	430b      	orrs	r3, r1
 8000522:	6093      	str	r3, [r2, #8]
			}

			uint8_t temp1 = pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber / 4;
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	791b      	ldrb	r3, [r3, #4]
 8000528:	089b      	lsrs	r3, r3, #2
 800052a:	74fb      	strb	r3, [r7, #19]
			uint8_t temp2 = pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber % 4;
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	791b      	ldrb	r3, [r3, #4]
 8000530:	f003 0303 	and.w	r3, r3, #3
 8000534:	74bb      	strb	r3, [r7, #18]
			uint8_t PORTCODE = GPIO_BASE_ADDR_TO_CODE(pGPIO_Handle->pGPIOx);
 8000536:	687b      	ldr	r3, [r7, #4]
 8000538:	681b      	ldr	r3, [r3, #0]
 800053a:	4a6f      	ldr	r2, [pc, #444]	; (80006f8 <GPIO_INIT+0x2cc>)
 800053c:	4293      	cmp	r3, r2
 800053e:	d024      	beq.n	800058a <GPIO_INIT+0x15e>
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	681b      	ldr	r3, [r3, #0]
 8000544:	4a6d      	ldr	r2, [pc, #436]	; (80006fc <GPIO_INIT+0x2d0>)
 8000546:	4293      	cmp	r3, r2
 8000548:	d01d      	beq.n	8000586 <GPIO_INIT+0x15a>
 800054a:	687b      	ldr	r3, [r7, #4]
 800054c:	681b      	ldr	r3, [r3, #0]
 800054e:	4a6c      	ldr	r2, [pc, #432]	; (8000700 <GPIO_INIT+0x2d4>)
 8000550:	4293      	cmp	r3, r2
 8000552:	d016      	beq.n	8000582 <GPIO_INIT+0x156>
 8000554:	687b      	ldr	r3, [r7, #4]
 8000556:	681b      	ldr	r3, [r3, #0]
 8000558:	4a6a      	ldr	r2, [pc, #424]	; (8000704 <GPIO_INIT+0x2d8>)
 800055a:	4293      	cmp	r3, r2
 800055c:	d00f      	beq.n	800057e <GPIO_INIT+0x152>
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	681b      	ldr	r3, [r3, #0]
 8000562:	4a69      	ldr	r2, [pc, #420]	; (8000708 <GPIO_INIT+0x2dc>)
 8000564:	4293      	cmp	r3, r2
 8000566:	d008      	beq.n	800057a <GPIO_INIT+0x14e>
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	681b      	ldr	r3, [r3, #0]
 800056c:	4a67      	ldr	r2, [pc, #412]	; (800070c <GPIO_INIT+0x2e0>)
 800056e:	4293      	cmp	r3, r2
 8000570:	d101      	bne.n	8000576 <GPIO_INIT+0x14a>
 8000572:	2307      	movs	r3, #7
 8000574:	e00a      	b.n	800058c <GPIO_INIT+0x160>
 8000576:	2300      	movs	r3, #0
 8000578:	e008      	b.n	800058c <GPIO_INIT+0x160>
 800057a:	2304      	movs	r3, #4
 800057c:	e006      	b.n	800058c <GPIO_INIT+0x160>
 800057e:	2303      	movs	r3, #3
 8000580:	e004      	b.n	800058c <GPIO_INIT+0x160>
 8000582:	2302      	movs	r3, #2
 8000584:	e002      	b.n	800058c <GPIO_INIT+0x160>
 8000586:	2301      	movs	r3, #1
 8000588:	e000      	b.n	800058c <GPIO_INIT+0x160>
 800058a:	2300      	movs	r3, #0
 800058c:	747b      	strb	r3, [r7, #17]
			SYSCFG->EXTICR[temp1] = PORTCODE << (temp2 * 4);                                                                            /*<It is GPIO port output @GPIO_PIN_SPEED register   >*/
 800058e:	7c7a      	ldrb	r2, [r7, #17]
 8000590:	7cbb      	ldrb	r3, [r7, #18]
 8000592:	009b      	lsls	r3, r3, #2
 8000594:	fa02 f103 	lsl.w	r1, r2, r3
 8000598:	4a5d      	ldr	r2, [pc, #372]	; (8000710 <GPIO_INIT+0x2e4>)
 800059a:	7cfb      	ldrb	r3, [r7, #19]
 800059c:	3302      	adds	r3, #2
 800059e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

			EXTI->IMR |= 1 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber;
 80005a2:	4b54      	ldr	r3, [pc, #336]	; (80006f4 <GPIO_INIT+0x2c8>)
 80005a4:	681b      	ldr	r3, [r3, #0]
 80005a6:	687a      	ldr	r2, [r7, #4]
 80005a8:	7912      	ldrb	r2, [r2, #4]
 80005aa:	4611      	mov	r1, r2
 80005ac:	2201      	movs	r2, #1
 80005ae:	408a      	lsls	r2, r1
 80005b0:	4611      	mov	r1, r2
 80005b2:	4a50      	ldr	r2, [pc, #320]	; (80006f4 <GPIO_INIT+0x2c8>)
 80005b4:	430b      	orrs	r3, r1
 80005b6:	6013      	str	r3, [r2, #0]
    	    }

    temp = 0;
 80005b8:	2300      	movs	r3, #0
 80005ba:	617b      	str	r3, [r7, #20]

    // configure the speed
    temp = (pGPIO_Handle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	799b      	ldrb	r3, [r3, #6]
 80005c0:	461a      	mov	r2, r3
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	791b      	ldrb	r3, [r3, #4]
 80005c6:	005b      	lsls	r3, r3, #1
 80005c8:	fa02 f303 	lsl.w	r3, r2, r3
 80005cc:	617b      	str	r3, [r7, #20]
    pGPIO_Handle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);                                          /*<It's clearing two bits before writing on it>*/
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	681b      	ldr	r3, [r3, #0]
 80005d2:	689a      	ldr	r2, [r3, #8]
 80005d4:	687b      	ldr	r3, [r7, #4]
 80005d6:	791b      	ldrb	r3, [r3, #4]
 80005d8:	4619      	mov	r1, r3
 80005da:	2303      	movs	r3, #3
 80005dc:	408b      	lsls	r3, r1
 80005de:	43db      	mvns	r3, r3
 80005e0:	4619      	mov	r1, r3
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	681b      	ldr	r3, [r3, #0]
 80005e6:	400a      	ands	r2, r1
 80005e8:	609a      	str	r2, [r3, #8]
    pGPIO_Handle->pGPIOx->OSPEEDR |= temp;
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	681b      	ldr	r3, [r3, #0]
 80005ee:	6899      	ldr	r1, [r3, #8]
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	681b      	ldr	r3, [r3, #0]
 80005f4:	697a      	ldr	r2, [r7, #20]
 80005f6:	430a      	orrs	r2, r1
 80005f8:	609a      	str	r2, [r3, #8]
    temp = 0;
 80005fa:	2300      	movs	r3, #0
 80005fc:	617b      	str	r3, [r7, #20]

    //3. configration the pupd
    temp = (pGPIO_Handle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	79db      	ldrb	r3, [r3, #7]
 8000602:	461a      	mov	r2, r3
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	791b      	ldrb	r3, [r3, #4]
 8000608:	005b      	lsls	r3, r3, #1
 800060a:	fa02 f303 	lsl.w	r3, r2, r3
 800060e:	617b      	str	r3, [r7, #20]
    pGPIO_Handle->pGPIOx->PUPDR &= ~(0x3 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);                                            /*<It's clearing two bits before writing on it>*/
 8000610:	687b      	ldr	r3, [r7, #4]
 8000612:	681b      	ldr	r3, [r3, #0]
 8000614:	68da      	ldr	r2, [r3, #12]
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	791b      	ldrb	r3, [r3, #4]
 800061a:	4619      	mov	r1, r3
 800061c:	2303      	movs	r3, #3
 800061e:	408b      	lsls	r3, r1
 8000620:	43db      	mvns	r3, r3
 8000622:	4619      	mov	r1, r3
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	681b      	ldr	r3, [r3, #0]
 8000628:	400a      	ands	r2, r1
 800062a:	60da      	str	r2, [r3, #12]
    pGPIO_Handle->pGPIOx->PUPDR |= temp;
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	681b      	ldr	r3, [r3, #0]
 8000630:	68d9      	ldr	r1, [r3, #12]
 8000632:	687b      	ldr	r3, [r7, #4]
 8000634:	681b      	ldr	r3, [r3, #0]
 8000636:	697a      	ldr	r2, [r7, #20]
 8000638:	430a      	orrs	r2, r1
 800063a:	60da      	str	r2, [r3, #12]

    //4. configuration the optype.
    temp = 0; 
 800063c:	2300      	movs	r3, #0
 800063e:	617b      	str	r3, [r7, #20]
    temp = (pGPIO_Handle->GPIO_PinConfig.GPIO_PinOPType << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 8000640:	687b      	ldr	r3, [r7, #4]
 8000642:	7a1b      	ldrb	r3, [r3, #8]
 8000644:	461a      	mov	r2, r3
 8000646:	687b      	ldr	r3, [r7, #4]
 8000648:	791b      	ldrb	r3, [r3, #4]
 800064a:	fa02 f303 	lsl.w	r3, r2, r3
 800064e:	617b      	str	r3, [r7, #20]
    pGPIO_Handle->pGPIOx->OTYPER &= ~(0x1 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);                                           /*<It's clearing two bits before writing on it>*/
 8000650:	687b      	ldr	r3, [r7, #4]
 8000652:	681b      	ldr	r3, [r3, #0]
 8000654:	685a      	ldr	r2, [r3, #4]
 8000656:	687b      	ldr	r3, [r7, #4]
 8000658:	791b      	ldrb	r3, [r3, #4]
 800065a:	4619      	mov	r1, r3
 800065c:	2301      	movs	r3, #1
 800065e:	408b      	lsls	r3, r1
 8000660:	43db      	mvns	r3, r3
 8000662:	4619      	mov	r1, r3
 8000664:	687b      	ldr	r3, [r7, #4]
 8000666:	681b      	ldr	r3, [r3, #0]
 8000668:	400a      	ands	r2, r1
 800066a:	605a      	str	r2, [r3, #4]
    pGPIO_Handle->pGPIOx->OTYPER |= temp;
 800066c:	687b      	ldr	r3, [r7, #4]
 800066e:	681b      	ldr	r3, [r3, #0]
 8000670:	6859      	ldr	r1, [r3, #4]
 8000672:	687b      	ldr	r3, [r7, #4]
 8000674:	681b      	ldr	r3, [r3, #0]
 8000676:	697a      	ldr	r2, [r7, #20]
 8000678:	430a      	orrs	r2, r1
 800067a:	605a      	str	r2, [r3, #4]

    // 5. configure the alt function reg
    if(pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 800067c:	687b      	ldr	r3, [r7, #4]
 800067e:	795b      	ldrb	r3, [r3, #5]
 8000680:	2b02      	cmp	r3, #2
 8000682:	d131      	bne.n	80006e8 <GPIO_INIT+0x2bc>
        uint8_t temp1, temp2;
        temp1 = pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000684:	687b      	ldr	r3, [r7, #4]
 8000686:	791b      	ldrb	r3, [r3, #4]
 8000688:	08db      	lsrs	r3, r3, #3
 800068a:	743b      	strb	r3, [r7, #16]
        temp2 = pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber % 8;
 800068c:	687b      	ldr	r3, [r7, #4]
 800068e:	791b      	ldrb	r3, [r3, #4]
 8000690:	f003 0307 	and.w	r3, r3, #7
 8000694:	73fb      	strb	r3, [r7, #15]
        pGPIO_Handle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));                                                                   /*<It's clearing two bits before writing on it>*/
 8000696:	687b      	ldr	r3, [r7, #4]
 8000698:	681b      	ldr	r3, [r3, #0]
 800069a:	7c3a      	ldrb	r2, [r7, #16]
 800069c:	3208      	adds	r2, #8
 800069e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80006a2:	7bfb      	ldrb	r3, [r7, #15]
 80006a4:	009b      	lsls	r3, r3, #2
 80006a6:	220f      	movs	r2, #15
 80006a8:	fa02 f303 	lsl.w	r3, r2, r3
 80006ac:	43db      	mvns	r3, r3
 80006ae:	4618      	mov	r0, r3
 80006b0:	687b      	ldr	r3, [r7, #4]
 80006b2:	681b      	ldr	r3, [r3, #0]
 80006b4:	7c3a      	ldrb	r2, [r7, #16]
 80006b6:	4001      	ands	r1, r0
 80006b8:	3208      	adds	r2, #8
 80006ba:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
        pGPIO_Handle->pGPIOx->AFR[temp1] |= (pGPIO_Handle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 80006be:	687b      	ldr	r3, [r7, #4]
 80006c0:	681b      	ldr	r3, [r3, #0]
 80006c2:	7c3a      	ldrb	r2, [r7, #16]
 80006c4:	3208      	adds	r2, #8
 80006c6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80006ca:	687b      	ldr	r3, [r7, #4]
 80006cc:	7a5b      	ldrb	r3, [r3, #9]
 80006ce:	461a      	mov	r2, r3
 80006d0:	7bfb      	ldrb	r3, [r7, #15]
 80006d2:	009b      	lsls	r3, r3, #2
 80006d4:	fa02 f303 	lsl.w	r3, r2, r3
 80006d8:	4618      	mov	r0, r3
 80006da:	687b      	ldr	r3, [r7, #4]
 80006dc:	681b      	ldr	r3, [r3, #0]
 80006de:	7c3a      	ldrb	r2, [r7, #16]
 80006e0:	4301      	orrs	r1, r0
 80006e2:	3208      	adds	r2, #8
 80006e4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

    }
}
 80006e8:	bf00      	nop
 80006ea:	371c      	adds	r7, #28
 80006ec:	46bd      	mov	sp, r7
 80006ee:	bc80      	pop	{r7}
 80006f0:	4770      	bx	lr
 80006f2:	bf00      	nop
 80006f4:	40013c00 	.word	0x40013c00
 80006f8:	40020000 	.word	0x40020000
 80006fc:	40020400 	.word	0x40020400
 8000700:	40020800 	.word	0x40020800
 8000704:	40020c00 	.word	0x40020c00
 8000708:	40021000 	.word	0x40021000
 800070c:	40021c00 	.word	0x40021c00
 8000710:	40013800 	.word	0x40013800

08000714 <GPIO_ToggleOutputPin>:
	pGPIOx->ODR = Value;
}


void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000714:	b480      	push	{r7}
 8000716:	b083      	sub	sp, #12
 8000718:	af00      	add	r7, sp, #0
 800071a:	6078      	str	r0, [r7, #4]
 800071c:	460b      	mov	r3, r1
 800071e:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1<< PinNumber);
 8000720:	687b      	ldr	r3, [r7, #4]
 8000722:	695b      	ldr	r3, [r3, #20]
 8000724:	78fa      	ldrb	r2, [r7, #3]
 8000726:	2101      	movs	r1, #1
 8000728:	fa01 f202 	lsl.w	r2, r1, r2
 800072c:	405a      	eors	r2, r3
 800072e:	687b      	ldr	r3, [r7, #4]
 8000730:	615a      	str	r2, [r3, #20]
}
 8000732:	bf00      	nop
 8000734:	370c      	adds	r7, #12
 8000736:	46bd      	mov	sp, r7
 8000738:	bc80      	pop	{r7}
 800073a:	4770      	bx	lr

0800073c <GPIO_IRQConfig>:

/*
 *  IRQ configration and ISR handling 
 */
void GPIO_IRQConfig(uint8_t GPIO_IRQNumber, uint32_t IRQPriorty, uint8_t EnorDi)
{
 800073c:	b480      	push	{r7}
 800073e:	b085      	sub	sp, #20
 8000740:	af00      	add	r7, sp, #0
 8000742:	4603      	mov	r3, r0
 8000744:	6039      	str	r1, [r7, #0]
 8000746:	71fb      	strb	r3, [r7, #7]
 8000748:	4613      	mov	r3, r2
 800074a:	71bb      	strb	r3, [r7, #6]
    if(EnorDi == ENABLE){
 800074c:	79bb      	ldrb	r3, [r7, #6]
 800074e:	2b01      	cmp	r3, #1
 8000750:	d133      	bne.n	80007ba <GPIO_IRQConfig+0x7e>
        if(GPIO_IRQNumber <= 31){
 8000752:	79fb      	ldrb	r3, [r7, #7]
 8000754:	2b1f      	cmp	r3, #31
 8000756:	d80a      	bhi.n	800076e <GPIO_IRQConfig+0x32>
            *NVIC_ISER0 |= 1<<  (GPIO_IRQNumber);
 8000758:	4b43      	ldr	r3, [pc, #268]	; (8000868 <GPIO_IRQConfig+0x12c>)
 800075a:	681b      	ldr	r3, [r3, #0]
 800075c:	79fa      	ldrb	r2, [r7, #7]
 800075e:	2101      	movs	r1, #1
 8000760:	fa01 f202 	lsl.w	r2, r1, r2
 8000764:	4611      	mov	r1, r2
 8000766:	4a40      	ldr	r2, [pc, #256]	; (8000868 <GPIO_IRQConfig+0x12c>)
 8000768:	430b      	orrs	r3, r1
 800076a:	6013      	str	r3, [r2, #0]
 800076c:	e058      	b.n	8000820 <GPIO_IRQConfig+0xe4>
        }else if(GPIO_IRQNumber > 31 && GPIO_IRQNumber <= 64){
 800076e:	79fb      	ldrb	r3, [r7, #7]
 8000770:	2b1f      	cmp	r3, #31
 8000772:	d90f      	bls.n	8000794 <GPIO_IRQConfig+0x58>
 8000774:	79fb      	ldrb	r3, [r7, #7]
 8000776:	2b40      	cmp	r3, #64	; 0x40
 8000778:	d80c      	bhi.n	8000794 <GPIO_IRQConfig+0x58>
            *NVIC_ISER1 |= 1<<  (GPIO_IRQNumber % 32);
 800077a:	4b3c      	ldr	r3, [pc, #240]	; (800086c <GPIO_IRQConfig+0x130>)
 800077c:	681b      	ldr	r3, [r3, #0]
 800077e:	79fa      	ldrb	r2, [r7, #7]
 8000780:	f002 021f 	and.w	r2, r2, #31
 8000784:	2101      	movs	r1, #1
 8000786:	fa01 f202 	lsl.w	r2, r1, r2
 800078a:	4611      	mov	r1, r2
 800078c:	4a37      	ldr	r2, [pc, #220]	; (800086c <GPIO_IRQConfig+0x130>)
 800078e:	430b      	orrs	r3, r1
 8000790:	6013      	str	r3, [r2, #0]
 8000792:	e045      	b.n	8000820 <GPIO_IRQConfig+0xe4>
        }else if(GPIO_IRQNumber > 64 && GPIO_IRQNumber <= 96)
 8000794:	79fb      	ldrb	r3, [r7, #7]
 8000796:	2b40      	cmp	r3, #64	; 0x40
 8000798:	d942      	bls.n	8000820 <GPIO_IRQConfig+0xe4>
 800079a:	79fb      	ldrb	r3, [r7, #7]
 800079c:	2b60      	cmp	r3, #96	; 0x60
 800079e:	d83f      	bhi.n	8000820 <GPIO_IRQConfig+0xe4>
            *NVIC_ISER2 |= 1<<  (GPIO_IRQNumber % 64);
 80007a0:	4b33      	ldr	r3, [pc, #204]	; (8000870 <GPIO_IRQConfig+0x134>)
 80007a2:	681b      	ldr	r3, [r3, #0]
 80007a4:	79fa      	ldrb	r2, [r7, #7]
 80007a6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80007aa:	2101      	movs	r1, #1
 80007ac:	fa01 f202 	lsl.w	r2, r1, r2
 80007b0:	4611      	mov	r1, r2
 80007b2:	4a2f      	ldr	r2, [pc, #188]	; (8000870 <GPIO_IRQConfig+0x134>)
 80007b4:	430b      	orrs	r3, r1
 80007b6:	6013      	str	r3, [r2, #0]
 80007b8:	e032      	b.n	8000820 <GPIO_IRQConfig+0xe4>
    }else{
        if(GPIO_IRQNumber <= 31){
 80007ba:	79fb      	ldrb	r3, [r7, #7]
 80007bc:	2b1f      	cmp	r3, #31
 80007be:	d80a      	bhi.n	80007d6 <GPIO_IRQConfig+0x9a>
            *NVIC_ICER0 |= 1<<  (GPIO_IRQNumber);
 80007c0:	4b2c      	ldr	r3, [pc, #176]	; (8000874 <GPIO_IRQConfig+0x138>)
 80007c2:	681b      	ldr	r3, [r3, #0]
 80007c4:	79fa      	ldrb	r2, [r7, #7]
 80007c6:	2101      	movs	r1, #1
 80007c8:	fa01 f202 	lsl.w	r2, r1, r2
 80007cc:	4611      	mov	r1, r2
 80007ce:	4a29      	ldr	r2, [pc, #164]	; (8000874 <GPIO_IRQConfig+0x138>)
 80007d0:	430b      	orrs	r3, r1
 80007d2:	6013      	str	r3, [r2, #0]
 80007d4:	e024      	b.n	8000820 <GPIO_IRQConfig+0xe4>
        }else if(GPIO_IRQNumber > 31 && GPIO_IRQNumber <= 64){
 80007d6:	79fb      	ldrb	r3, [r7, #7]
 80007d8:	2b1f      	cmp	r3, #31
 80007da:	d90f      	bls.n	80007fc <GPIO_IRQConfig+0xc0>
 80007dc:	79fb      	ldrb	r3, [r7, #7]
 80007de:	2b40      	cmp	r3, #64	; 0x40
 80007e0:	d80c      	bhi.n	80007fc <GPIO_IRQConfig+0xc0>
            *NVIC_ICER1 |= 1<<  (GPIO_IRQNumber % 32);
 80007e2:	4b25      	ldr	r3, [pc, #148]	; (8000878 <GPIO_IRQConfig+0x13c>)
 80007e4:	681b      	ldr	r3, [r3, #0]
 80007e6:	79fa      	ldrb	r2, [r7, #7]
 80007e8:	f002 021f 	and.w	r2, r2, #31
 80007ec:	2101      	movs	r1, #1
 80007ee:	fa01 f202 	lsl.w	r2, r1, r2
 80007f2:	4611      	mov	r1, r2
 80007f4:	4a20      	ldr	r2, [pc, #128]	; (8000878 <GPIO_IRQConfig+0x13c>)
 80007f6:	430b      	orrs	r3, r1
 80007f8:	6013      	str	r3, [r2, #0]
 80007fa:	e011      	b.n	8000820 <GPIO_IRQConfig+0xe4>
        }else if(GPIO_IRQNumber > 64 && GPIO_IRQNumber <= 96)
 80007fc:	79fb      	ldrb	r3, [r7, #7]
 80007fe:	2b40      	cmp	r3, #64	; 0x40
 8000800:	d90e      	bls.n	8000820 <GPIO_IRQConfig+0xe4>
 8000802:	79fb      	ldrb	r3, [r7, #7]
 8000804:	2b60      	cmp	r3, #96	; 0x60
 8000806:	d80b      	bhi.n	8000820 <GPIO_IRQConfig+0xe4>
            *NVIC_ICER2 |= 1<<  (GPIO_IRQNumber % 64);
 8000808:	4b1c      	ldr	r3, [pc, #112]	; (800087c <GPIO_IRQConfig+0x140>)
 800080a:	681b      	ldr	r3, [r3, #0]
 800080c:	79fa      	ldrb	r2, [r7, #7]
 800080e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000812:	2101      	movs	r1, #1
 8000814:	fa01 f202 	lsl.w	r2, r1, r2
 8000818:	4611      	mov	r1, r2
 800081a:	4a18      	ldr	r2, [pc, #96]	; (800087c <GPIO_IRQConfig+0x140>)
 800081c:	430b      	orrs	r3, r1
 800081e:	6013      	str	r3, [r2, #0]
    }

    uint8_t iprx = GPIO_IRQNumber/ 4;
 8000820:	79fb      	ldrb	r3, [r7, #7]
 8000822:	089b      	lsrs	r3, r3, #2
 8000824:	73fb      	strb	r3, [r7, #15]
    uint8_t iprx_section =  GPIO_IRQNumber % 4;
 8000826:	79fb      	ldrb	r3, [r7, #7]
 8000828:	f003 0303 	and.w	r3, r3, #3
 800082c:	73bb      	strb	r3, [r7, #14]
    uint8_t shift_amount = (8 * iprx_section) + (8 - NO_PR_BITS_IMPLEMENTED);
 800082e:	7bbb      	ldrb	r3, [r7, #14]
 8000830:	00db      	lsls	r3, r3, #3
 8000832:	b2db      	uxtb	r3, r3
 8000834:	3304      	adds	r3, #4
 8000836:	737b      	strb	r3, [r7, #13]
    *( iprx + NVIC_PR_BASE_ADDR) |= (IRQPriorty << shift_amount);
 8000838:	7bfb      	ldrb	r3, [r7, #15]
 800083a:	009b      	lsls	r3, r3, #2
 800083c:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000840:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000844:	6819      	ldr	r1, [r3, #0]
 8000846:	7b7b      	ldrb	r3, [r7, #13]
 8000848:	683a      	ldr	r2, [r7, #0]
 800084a:	409a      	lsls	r2, r3
 800084c:	7bfb      	ldrb	r3, [r7, #15]
 800084e:	009b      	lsls	r3, r3, #2
 8000850:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000854:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000858:	430a      	orrs	r2, r1
 800085a:	601a      	str	r2, [r3, #0]
}
 800085c:	bf00      	nop
 800085e:	3714      	adds	r7, #20
 8000860:	46bd      	mov	sp, r7
 8000862:	bc80      	pop	{r7}
 8000864:	4770      	bx	lr
 8000866:	bf00      	nop
 8000868:	e000e100 	.word	0xe000e100
 800086c:	e000e104 	.word	0xe000e104
 8000870:	e000e108 	.word	0xe000e108
 8000874:	e000e180 	.word	0xe000e180
 8000878:	e000e184 	.word	0xe000e184
 800087c:	e000e188 	.word	0xe000e188

08000880 <GPIO_IRQHandling>:


void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000880:	b480      	push	{r7}
 8000882:	b083      	sub	sp, #12
 8000884:	af00      	add	r7, sp, #0
 8000886:	4603      	mov	r3, r0
 8000888:	71fb      	strb	r3, [r7, #7]
    if(EXTI-> PR & (1 << PinNumber)){
 800088a:	4b0c      	ldr	r3, [pc, #48]	; (80008bc <GPIO_IRQHandling+0x3c>)
 800088c:	695b      	ldr	r3, [r3, #20]
 800088e:	79fa      	ldrb	r2, [r7, #7]
 8000890:	2101      	movs	r1, #1
 8000892:	fa01 f202 	lsl.w	r2, r1, r2
 8000896:	4013      	ands	r3, r2
 8000898:	2b00      	cmp	r3, #0
 800089a:	d009      	beq.n	80008b0 <GPIO_IRQHandling+0x30>
        EXTI->PR |= (1 << PinNumber);
 800089c:	4b07      	ldr	r3, [pc, #28]	; (80008bc <GPIO_IRQHandling+0x3c>)
 800089e:	695b      	ldr	r3, [r3, #20]
 80008a0:	79fa      	ldrb	r2, [r7, #7]
 80008a2:	2101      	movs	r1, #1
 80008a4:	fa01 f202 	lsl.w	r2, r1, r2
 80008a8:	4611      	mov	r1, r2
 80008aa:	4a04      	ldr	r2, [pc, #16]	; (80008bc <GPIO_IRQHandling+0x3c>)
 80008ac:	430b      	orrs	r3, r1
 80008ae:	6153      	str	r3, [r2, #20]
    }
}
 80008b0:	bf00      	nop
 80008b2:	370c      	adds	r7, #12
 80008b4:	46bd      	mov	sp, r7
 80008b6:	bc80      	pop	{r7}
 80008b8:	4770      	bx	lr
 80008ba:	bf00      	nop
 80008bc:	40013c00 	.word	0x40013c00

080008c0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80008c0:	480d      	ldr	r0, [pc, #52]	; (80008f8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80008c2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80008c4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80008c8:	480c      	ldr	r0, [pc, #48]	; (80008fc <LoopForever+0x6>)
  ldr r1, =_edata
 80008ca:	490d      	ldr	r1, [pc, #52]	; (8000900 <LoopForever+0xa>)
  ldr r2, =_sidata
 80008cc:	4a0d      	ldr	r2, [pc, #52]	; (8000904 <LoopForever+0xe>)
  movs r3, #0
 80008ce:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80008d0:	e002      	b.n	80008d8 <LoopCopyDataInit>

080008d2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80008d2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80008d4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80008d6:	3304      	adds	r3, #4

080008d8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80008d8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80008da:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80008dc:	d3f9      	bcc.n	80008d2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80008de:	4a0a      	ldr	r2, [pc, #40]	; (8000908 <LoopForever+0x12>)
  ldr r4, =_ebss
 80008e0:	4c0a      	ldr	r4, [pc, #40]	; (800090c <LoopForever+0x16>)
  movs r3, #0
 80008e2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80008e4:	e001      	b.n	80008ea <LoopFillZerobss>

080008e6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80008e6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80008e8:	3204      	adds	r2, #4

080008ea <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80008ea:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80008ec:	d3fb      	bcc.n	80008e6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80008ee:	f000 f811 	bl	8000914 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80008f2:	f7ff fc85 	bl	8000200 <main>

080008f6 <LoopForever>:

LoopForever:
    b LoopForever
 80008f6:	e7fe      	b.n	80008f6 <LoopForever>
  ldr   r0, =_estack
 80008f8:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 80008fc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000900:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000904:	0800098c 	.word	0x0800098c
  ldr r2, =_sbss
 8000908:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800090c:	2000001c 	.word	0x2000001c

08000910 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000910:	e7fe      	b.n	8000910 <ADC_IRQHandler>
	...

08000914 <__libc_init_array>:
 8000914:	b570      	push	{r4, r5, r6, lr}
 8000916:	4d0d      	ldr	r5, [pc, #52]	; (800094c <__libc_init_array+0x38>)
 8000918:	4c0d      	ldr	r4, [pc, #52]	; (8000950 <__libc_init_array+0x3c>)
 800091a:	1b64      	subs	r4, r4, r5
 800091c:	10a4      	asrs	r4, r4, #2
 800091e:	2600      	movs	r6, #0
 8000920:	42a6      	cmp	r6, r4
 8000922:	d109      	bne.n	8000938 <__libc_init_array+0x24>
 8000924:	4d0b      	ldr	r5, [pc, #44]	; (8000954 <__libc_init_array+0x40>)
 8000926:	4c0c      	ldr	r4, [pc, #48]	; (8000958 <__libc_init_array+0x44>)
 8000928:	f000 f820 	bl	800096c <_init>
 800092c:	1b64      	subs	r4, r4, r5
 800092e:	10a4      	asrs	r4, r4, #2
 8000930:	2600      	movs	r6, #0
 8000932:	42a6      	cmp	r6, r4
 8000934:	d105      	bne.n	8000942 <__libc_init_array+0x2e>
 8000936:	bd70      	pop	{r4, r5, r6, pc}
 8000938:	f855 3b04 	ldr.w	r3, [r5], #4
 800093c:	4798      	blx	r3
 800093e:	3601      	adds	r6, #1
 8000940:	e7ee      	b.n	8000920 <__libc_init_array+0xc>
 8000942:	f855 3b04 	ldr.w	r3, [r5], #4
 8000946:	4798      	blx	r3
 8000948:	3601      	adds	r6, #1
 800094a:	e7f2      	b.n	8000932 <__libc_init_array+0x1e>
 800094c:	08000984 	.word	0x08000984
 8000950:	08000984 	.word	0x08000984
 8000954:	08000984 	.word	0x08000984
 8000958:	08000988 	.word	0x08000988

0800095c <memset>:
 800095c:	4402      	add	r2, r0
 800095e:	4603      	mov	r3, r0
 8000960:	4293      	cmp	r3, r2
 8000962:	d100      	bne.n	8000966 <memset+0xa>
 8000964:	4770      	bx	lr
 8000966:	f803 1b01 	strb.w	r1, [r3], #1
 800096a:	e7f9      	b.n	8000960 <memset+0x4>

0800096c <_init>:
 800096c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800096e:	bf00      	nop
 8000970:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000972:	bc08      	pop	{r3}
 8000974:	469e      	mov	lr, r3
 8000976:	4770      	bx	lr

08000978 <_fini>:
 8000978:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800097a:	bf00      	nop
 800097c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800097e:	bc08      	pop	{r3}
 8000980:	469e      	mov	lr, r3
 8000982:	4770      	bx	lr
