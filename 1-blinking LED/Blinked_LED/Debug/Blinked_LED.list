
Blinked_LED.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000005f4  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000788  08000790  00010790  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000788  08000788  00010790  2**0
                  CONTENTS
  4 .ARM          00000000  08000788  08000788  00010790  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000788  08000790  00010790  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000788  08000788  00010788  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800078c  0800078c  0001078c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010790  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000790  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000790  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010790  2**0
                  CONTENTS, READONLY
 12 .debug_info   000009ba  00000000  00000000  000107ba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000239  00000000  00000000  00011174  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000b8  00000000  00000000  000113b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000090  00000000  00000000  00011468  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000014b4  00000000  00000000  000114f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000dfa  00000000  00000000  000129ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00005d7d  00000000  00000000  000137a6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00019523  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000224  00000000  00000000  00019574  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000770 	.word	0x08000770

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000770 	.word	0x08000770

080001d4 <delay>:

#include "HAL.h"



void delay(void){
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < 50000; i++);
 80001da:	2300      	movs	r3, #0
 80001dc:	607b      	str	r3, [r7, #4]
 80001de:	e002      	b.n	80001e6 <delay+0x12>
 80001e0:	687b      	ldr	r3, [r7, #4]
 80001e2:	3301      	adds	r3, #1
 80001e4:	607b      	str	r3, [r7, #4]
 80001e6:	687b      	ldr	r3, [r7, #4]
 80001e8:	f24c 324f 	movw	r2, #49999	; 0xc34f
 80001ec:	4293      	cmp	r3, r2
 80001ee:	d9f7      	bls.n	80001e0 <delay+0xc>
}
 80001f0:	bf00      	nop
 80001f2:	bf00      	nop
 80001f4:	370c      	adds	r7, #12
 80001f6:	46bd      	mov	sp, r7
 80001f8:	bc80      	pop	{r7}
 80001fa:	4770      	bx	lr

080001fc <main>:

int main(void){
 80001fc:	b580      	push	{r7, lr}
 80001fe:	b084      	sub	sp, #16
 8000200:	af00      	add	r7, sp, #0
	GPIO_Handle  GpioLed;
	GpioLed.pGPIOx = GPIOC;
 8000202:	4b0d      	ldr	r3, [pc, #52]	; (8000238 <main+0x3c>)
 8000204:	607b      	str	r3, [r7, #4]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000206:	230d      	movs	r3, #13
 8000208:	723b      	strb	r3, [r7, #8]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800020a:	2301      	movs	r3, #1
 800020c:	727b      	strb	r3, [r7, #9]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 800020e:	2300      	movs	r3, #0
 8000210:	72bb      	strb	r3, [r7, #10]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000212:	2300      	movs	r3, #0
 8000214:	733b      	strb	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000216:	2300      	movs	r3, #0
 8000218:	72fb      	strb	r3, [r7, #11]


	GPIO_PeriClockControl(GPIOC, ENABLE);
 800021a:	2101      	movs	r1, #1
 800021c:	4806      	ldr	r0, [pc, #24]	; (8000238 <main+0x3c>)
 800021e:	f000 f80d 	bl	800023c <GPIO_PeriClockControl>
	GPIO_INIT(&GpioLed);
 8000222:	1d3b      	adds	r3, r7, #4
 8000224:	4618      	mov	r0, r3
 8000226:	f000 f8cd 	bl	80003c4 <GPIO_INIT>
	while(1){
		GPIO_ToggleOutputPin(GPIOC, GPIO_PIN_NO_13);
 800022a:	210d      	movs	r1, #13
 800022c:	4802      	ldr	r0, [pc, #8]	; (8000238 <main+0x3c>)
 800022e:	f000 fa3d 	bl	80006ac <GPIO_ToggleOutputPin>
		delay();
 8000232:	f7ff ffcf 	bl	80001d4 <delay>
		GPIO_ToggleOutputPin(GPIOC, GPIO_PIN_NO_13);
 8000236:	e7f8      	b.n	800022a <main+0x2e>
 8000238:	40020800 	.word	0x40020800

0800023c <GPIO_PeriClockControl>:
 * @Note             -  None
 * 
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)

{
 800023c:	b480      	push	{r7}
 800023e:	b083      	sub	sp, #12
 8000240:	af00      	add	r7, sp, #0
 8000242:	6078      	str	r0, [r7, #4]
 8000244:	460b      	mov	r3, r1
 8000246:	70fb      	strb	r3, [r7, #3]
    if(EnorDi == ENABLE){
 8000248:	78fb      	ldrb	r3, [r7, #3]
 800024a:	2b01      	cmp	r3, #1
 800024c:	d141      	bne.n	80002d2 <GPIO_PeriClockControl+0x96>
        if(pGPIOx == GPIOA){
 800024e:	687b      	ldr	r3, [r7, #4]
 8000250:	4a55      	ldr	r2, [pc, #340]	; (80003a8 <GPIO_PeriClockControl+0x16c>)
 8000252:	4293      	cmp	r3, r2
 8000254:	d106      	bne.n	8000264 <GPIO_PeriClockControl+0x28>
             GPIOA_PCLK_EN();
 8000256:	4b55      	ldr	r3, [pc, #340]	; (80003ac <GPIO_PeriClockControl+0x170>)
 8000258:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800025a:	4a54      	ldr	r2, [pc, #336]	; (80003ac <GPIO_PeriClockControl+0x170>)
 800025c:	f043 0301 	orr.w	r3, r3, #1
 8000260:	6313      	str	r3, [r2, #48]	; 0x30
            GPIOH_PCLK_DI();
        }

    }

}
 8000262:	e09b      	b.n	800039c <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOB){
 8000264:	687b      	ldr	r3, [r7, #4]
 8000266:	4a52      	ldr	r2, [pc, #328]	; (80003b0 <GPIO_PeriClockControl+0x174>)
 8000268:	4293      	cmp	r3, r2
 800026a:	d106      	bne.n	800027a <GPIO_PeriClockControl+0x3e>
            GPIOB_PCLK_EN();
 800026c:	4b4f      	ldr	r3, [pc, #316]	; (80003ac <GPIO_PeriClockControl+0x170>)
 800026e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000270:	4a4e      	ldr	r2, [pc, #312]	; (80003ac <GPIO_PeriClockControl+0x170>)
 8000272:	f043 0302 	orr.w	r3, r3, #2
 8000276:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000278:	e090      	b.n	800039c <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOC){
 800027a:	687b      	ldr	r3, [r7, #4]
 800027c:	4a4d      	ldr	r2, [pc, #308]	; (80003b4 <GPIO_PeriClockControl+0x178>)
 800027e:	4293      	cmp	r3, r2
 8000280:	d106      	bne.n	8000290 <GPIO_PeriClockControl+0x54>
            GPIOC_PCLK_EN();
 8000282:	4b4a      	ldr	r3, [pc, #296]	; (80003ac <GPIO_PeriClockControl+0x170>)
 8000284:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000286:	4a49      	ldr	r2, [pc, #292]	; (80003ac <GPIO_PeriClockControl+0x170>)
 8000288:	f043 0304 	orr.w	r3, r3, #4
 800028c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800028e:	e085      	b.n	800039c <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOD){
 8000290:	687b      	ldr	r3, [r7, #4]
 8000292:	4a49      	ldr	r2, [pc, #292]	; (80003b8 <GPIO_PeriClockControl+0x17c>)
 8000294:	4293      	cmp	r3, r2
 8000296:	d106      	bne.n	80002a6 <GPIO_PeriClockControl+0x6a>
            GPIOD_PCLK_EN();
 8000298:	4b44      	ldr	r3, [pc, #272]	; (80003ac <GPIO_PeriClockControl+0x170>)
 800029a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800029c:	4a43      	ldr	r2, [pc, #268]	; (80003ac <GPIO_PeriClockControl+0x170>)
 800029e:	f043 0308 	orr.w	r3, r3, #8
 80002a2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002a4:	e07a      	b.n	800039c <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOE){
 80002a6:	687b      	ldr	r3, [r7, #4]
 80002a8:	4a44      	ldr	r2, [pc, #272]	; (80003bc <GPIO_PeriClockControl+0x180>)
 80002aa:	4293      	cmp	r3, r2
 80002ac:	d106      	bne.n	80002bc <GPIO_PeriClockControl+0x80>
            GPIOE_PCLK_EN();
 80002ae:	4b3f      	ldr	r3, [pc, #252]	; (80003ac <GPIO_PeriClockControl+0x170>)
 80002b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b2:	4a3e      	ldr	r2, [pc, #248]	; (80003ac <GPIO_PeriClockControl+0x170>)
 80002b4:	f043 0310 	orr.w	r3, r3, #16
 80002b8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ba:	e06f      	b.n	800039c <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOH){
 80002bc:	687b      	ldr	r3, [r7, #4]
 80002be:	4a40      	ldr	r2, [pc, #256]	; (80003c0 <GPIO_PeriClockControl+0x184>)
 80002c0:	4293      	cmp	r3, r2
 80002c2:	d16b      	bne.n	800039c <GPIO_PeriClockControl+0x160>
            GPIOH_PCLK_EN();
 80002c4:	4b39      	ldr	r3, [pc, #228]	; (80003ac <GPIO_PeriClockControl+0x170>)
 80002c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002c8:	4a38      	ldr	r2, [pc, #224]	; (80003ac <GPIO_PeriClockControl+0x170>)
 80002ca:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002ce:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002d0:	e064      	b.n	800039c <GPIO_PeriClockControl+0x160>
        if(pGPIOx == GPIOA){
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	4a34      	ldr	r2, [pc, #208]	; (80003a8 <GPIO_PeriClockControl+0x16c>)
 80002d6:	4293      	cmp	r3, r2
 80002d8:	d10c      	bne.n	80002f4 <GPIO_PeriClockControl+0xb8>
            GPIOA_PCLK_DI();
 80002da:	4b34      	ldr	r3, [pc, #208]	; (80003ac <GPIO_PeriClockControl+0x170>)
 80002dc:	691b      	ldr	r3, [r3, #16]
 80002de:	4a33      	ldr	r2, [pc, #204]	; (80003ac <GPIO_PeriClockControl+0x170>)
 80002e0:	f043 0301 	orr.w	r3, r3, #1
 80002e4:	6113      	str	r3, [r2, #16]
 80002e6:	4b31      	ldr	r3, [pc, #196]	; (80003ac <GPIO_PeriClockControl+0x170>)
 80002e8:	691b      	ldr	r3, [r3, #16]
 80002ea:	4a30      	ldr	r2, [pc, #192]	; (80003ac <GPIO_PeriClockControl+0x170>)
 80002ec:	f023 0301 	bic.w	r3, r3, #1
 80002f0:	6113      	str	r3, [r2, #16]
}
 80002f2:	e053      	b.n	800039c <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOB){
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	4a2e      	ldr	r2, [pc, #184]	; (80003b0 <GPIO_PeriClockControl+0x174>)
 80002f8:	4293      	cmp	r3, r2
 80002fa:	d10c      	bne.n	8000316 <GPIO_PeriClockControl+0xda>
            GPIOB_PCLK_DI();
 80002fc:	4b2b      	ldr	r3, [pc, #172]	; (80003ac <GPIO_PeriClockControl+0x170>)
 80002fe:	691b      	ldr	r3, [r3, #16]
 8000300:	4a2a      	ldr	r2, [pc, #168]	; (80003ac <GPIO_PeriClockControl+0x170>)
 8000302:	f043 0302 	orr.w	r3, r3, #2
 8000306:	6113      	str	r3, [r2, #16]
 8000308:	4b28      	ldr	r3, [pc, #160]	; (80003ac <GPIO_PeriClockControl+0x170>)
 800030a:	691b      	ldr	r3, [r3, #16]
 800030c:	4a27      	ldr	r2, [pc, #156]	; (80003ac <GPIO_PeriClockControl+0x170>)
 800030e:	f023 0302 	bic.w	r3, r3, #2
 8000312:	6113      	str	r3, [r2, #16]
}
 8000314:	e042      	b.n	800039c <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOC){
 8000316:	687b      	ldr	r3, [r7, #4]
 8000318:	4a26      	ldr	r2, [pc, #152]	; (80003b4 <GPIO_PeriClockControl+0x178>)
 800031a:	4293      	cmp	r3, r2
 800031c:	d10c      	bne.n	8000338 <GPIO_PeriClockControl+0xfc>
            GPIOC_PCLK_DI();
 800031e:	4b23      	ldr	r3, [pc, #140]	; (80003ac <GPIO_PeriClockControl+0x170>)
 8000320:	691b      	ldr	r3, [r3, #16]
 8000322:	4a22      	ldr	r2, [pc, #136]	; (80003ac <GPIO_PeriClockControl+0x170>)
 8000324:	f043 0304 	orr.w	r3, r3, #4
 8000328:	6113      	str	r3, [r2, #16]
 800032a:	4b20      	ldr	r3, [pc, #128]	; (80003ac <GPIO_PeriClockControl+0x170>)
 800032c:	691b      	ldr	r3, [r3, #16]
 800032e:	4a1f      	ldr	r2, [pc, #124]	; (80003ac <GPIO_PeriClockControl+0x170>)
 8000330:	f023 0304 	bic.w	r3, r3, #4
 8000334:	6113      	str	r3, [r2, #16]
}
 8000336:	e031      	b.n	800039c <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOD){
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	4a1f      	ldr	r2, [pc, #124]	; (80003b8 <GPIO_PeriClockControl+0x17c>)
 800033c:	4293      	cmp	r3, r2
 800033e:	d10c      	bne.n	800035a <GPIO_PeriClockControl+0x11e>
            GPIOD_PCLK_DI();
 8000340:	4b1a      	ldr	r3, [pc, #104]	; (80003ac <GPIO_PeriClockControl+0x170>)
 8000342:	691b      	ldr	r3, [r3, #16]
 8000344:	4a19      	ldr	r2, [pc, #100]	; (80003ac <GPIO_PeriClockControl+0x170>)
 8000346:	f043 0308 	orr.w	r3, r3, #8
 800034a:	6113      	str	r3, [r2, #16]
 800034c:	4b17      	ldr	r3, [pc, #92]	; (80003ac <GPIO_PeriClockControl+0x170>)
 800034e:	691b      	ldr	r3, [r3, #16]
 8000350:	4a16      	ldr	r2, [pc, #88]	; (80003ac <GPIO_PeriClockControl+0x170>)
 8000352:	f023 0308 	bic.w	r3, r3, #8
 8000356:	6113      	str	r3, [r2, #16]
}
 8000358:	e020      	b.n	800039c <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOE){
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	4a17      	ldr	r2, [pc, #92]	; (80003bc <GPIO_PeriClockControl+0x180>)
 800035e:	4293      	cmp	r3, r2
 8000360:	d10c      	bne.n	800037c <GPIO_PeriClockControl+0x140>
            GPIOE_PCLK_DI();
 8000362:	4b12      	ldr	r3, [pc, #72]	; (80003ac <GPIO_PeriClockControl+0x170>)
 8000364:	691b      	ldr	r3, [r3, #16]
 8000366:	4a11      	ldr	r2, [pc, #68]	; (80003ac <GPIO_PeriClockControl+0x170>)
 8000368:	f043 0310 	orr.w	r3, r3, #16
 800036c:	6113      	str	r3, [r2, #16]
 800036e:	4b0f      	ldr	r3, [pc, #60]	; (80003ac <GPIO_PeriClockControl+0x170>)
 8000370:	691b      	ldr	r3, [r3, #16]
 8000372:	4a0e      	ldr	r2, [pc, #56]	; (80003ac <GPIO_PeriClockControl+0x170>)
 8000374:	f023 0310 	bic.w	r3, r3, #16
 8000378:	6113      	str	r3, [r2, #16]
}
 800037a:	e00f      	b.n	800039c <GPIO_PeriClockControl+0x160>
        }else if(pGPIOx == GPIOH){
 800037c:	687b      	ldr	r3, [r7, #4]
 800037e:	4a10      	ldr	r2, [pc, #64]	; (80003c0 <GPIO_PeriClockControl+0x184>)
 8000380:	4293      	cmp	r3, r2
 8000382:	d10b      	bne.n	800039c <GPIO_PeriClockControl+0x160>
            GPIOH_PCLK_DI();
 8000384:	4b09      	ldr	r3, [pc, #36]	; (80003ac <GPIO_PeriClockControl+0x170>)
 8000386:	691b      	ldr	r3, [r3, #16]
 8000388:	4a08      	ldr	r2, [pc, #32]	; (80003ac <GPIO_PeriClockControl+0x170>)
 800038a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800038e:	6113      	str	r3, [r2, #16]
 8000390:	4b06      	ldr	r3, [pc, #24]	; (80003ac <GPIO_PeriClockControl+0x170>)
 8000392:	691b      	ldr	r3, [r3, #16]
 8000394:	4a05      	ldr	r2, [pc, #20]	; (80003ac <GPIO_PeriClockControl+0x170>)
 8000396:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800039a:	6113      	str	r3, [r2, #16]
}
 800039c:	bf00      	nop
 800039e:	370c      	adds	r7, #12
 80003a0:	46bd      	mov	sp, r7
 80003a2:	bc80      	pop	{r7}
 80003a4:	4770      	bx	lr
 80003a6:	bf00      	nop
 80003a8:	40020000 	.word	0x40020000
 80003ac:	40023800 	.word	0x40023800
 80003b0:	40020400 	.word	0x40020400
 80003b4:	40020800 	.word	0x40020800
 80003b8:	40020c00 	.word	0x40020c00
 80003bc:	40021000 	.word	0x40021000
 80003c0:	40021c00 	.word	0x40021c00

080003c4 <GPIO_INIT>:
 * @Note             -  None
 * 
 */

void GPIO_INIT(GPIO_Handle *pGPIO_Handle)
{
 80003c4:	b480      	push	{r7}
 80003c6:	b087      	sub	sp, #28
 80003c8:	af00      	add	r7, sp, #0
 80003ca:	6078      	str	r0, [r7, #4]
    uint32_t temp = 0;
 80003cc:	2300      	movs	r3, #0
 80003ce:	617b      	str	r3, [r7, #20]
    //1. Configure the mode of gpio pin
    if(pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	795b      	ldrb	r3, [r3, #5]
 80003d4:	2b03      	cmp	r3, #3
 80003d6:	d81f      	bhi.n	8000418 <GPIO_INIT+0x54>
        // non intruppt mode
        temp = (pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 80003d8:	687b      	ldr	r3, [r7, #4]
 80003da:	795b      	ldrb	r3, [r3, #5]
 80003dc:	461a      	mov	r2, r3
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	791b      	ldrb	r3, [r3, #4]
 80003e2:	005b      	lsls	r3, r3, #1
 80003e4:	fa02 f303 	lsl.w	r3, r2, r3
 80003e8:	617b      	str	r3, [r7, #20]
        pGPIO_Handle->pGPIOx->MODER &= ~(0x3 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);                                           /*<It's clearing two bits before writing on it>*/
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	681b      	ldr	r3, [r3, #0]
 80003ee:	681a      	ldr	r2, [r3, #0]
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	791b      	ldrb	r3, [r3, #4]
 80003f4:	4619      	mov	r1, r3
 80003f6:	2303      	movs	r3, #3
 80003f8:	408b      	lsls	r3, r1
 80003fa:	43db      	mvns	r3, r3
 80003fc:	4619      	mov	r1, r3
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	681b      	ldr	r3, [r3, #0]
 8000402:	400a      	ands	r2, r1
 8000404:	601a      	str	r2, [r3, #0]
        pGPIO_Handle->pGPIOx->MODER |= temp;
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	681b      	ldr	r3, [r3, #0]
 800040a:	6819      	ldr	r1, [r3, #0]
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	681b      	ldr	r3, [r3, #0]
 8000410:	697a      	ldr	r2, [r7, #20]
 8000412:	430a      	orrs	r2, r1
 8000414:	601a      	str	r2, [r3, #0]
 8000416:	e09b      	b.n	8000550 <GPIO_INIT+0x18c>

    }else{
	// interrupt mode
    	    if(pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT){
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	795b      	ldrb	r3, [r3, #5]
 800041c:	2b04      	cmp	r3, #4
 800041e:	d117      	bne.n	8000450 <GPIO_INIT+0x8c>
				EXTI->FTSR |= (1 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 8000420:	4b9a      	ldr	r3, [pc, #616]	; (800068c <GPIO_INIT+0x2c8>)
 8000422:	68db      	ldr	r3, [r3, #12]
 8000424:	687a      	ldr	r2, [r7, #4]
 8000426:	7912      	ldrb	r2, [r2, #4]
 8000428:	4611      	mov	r1, r2
 800042a:	2201      	movs	r2, #1
 800042c:	408a      	lsls	r2, r1
 800042e:	4611      	mov	r1, r2
 8000430:	4a96      	ldr	r2, [pc, #600]	; (800068c <GPIO_INIT+0x2c8>)
 8000432:	430b      	orrs	r3, r1
 8000434:	60d3      	str	r3, [r2, #12]
				EXTI->RTSR &= ~(1 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 8000436:	4b95      	ldr	r3, [pc, #596]	; (800068c <GPIO_INIT+0x2c8>)
 8000438:	689b      	ldr	r3, [r3, #8]
 800043a:	687a      	ldr	r2, [r7, #4]
 800043c:	7912      	ldrb	r2, [r2, #4]
 800043e:	4611      	mov	r1, r2
 8000440:	2201      	movs	r2, #1
 8000442:	408a      	lsls	r2, r1
 8000444:	43d2      	mvns	r2, r2
 8000446:	4611      	mov	r1, r2
 8000448:	4a90      	ldr	r2, [pc, #576]	; (800068c <GPIO_INIT+0x2c8>)
 800044a:	400b      	ands	r3, r1
 800044c:	6093      	str	r3, [r2, #8]
 800044e:	e035      	b.n	80004bc <GPIO_INIT+0xf8>
			}else if (pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 8000450:	687b      	ldr	r3, [r7, #4]
 8000452:	795b      	ldrb	r3, [r3, #5]
 8000454:	2b05      	cmp	r3, #5
 8000456:	d117      	bne.n	8000488 <GPIO_INIT+0xc4>
				EXTI->RTSR |= (1 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 8000458:	4b8c      	ldr	r3, [pc, #560]	; (800068c <GPIO_INIT+0x2c8>)
 800045a:	689b      	ldr	r3, [r3, #8]
 800045c:	687a      	ldr	r2, [r7, #4]
 800045e:	7912      	ldrb	r2, [r2, #4]
 8000460:	4611      	mov	r1, r2
 8000462:	2201      	movs	r2, #1
 8000464:	408a      	lsls	r2, r1
 8000466:	4611      	mov	r1, r2
 8000468:	4a88      	ldr	r2, [pc, #544]	; (800068c <GPIO_INIT+0x2c8>)
 800046a:	430b      	orrs	r3, r1
 800046c:	6093      	str	r3, [r2, #8]
				EXTI->FTSR &= ~(1 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 800046e:	4b87      	ldr	r3, [pc, #540]	; (800068c <GPIO_INIT+0x2c8>)
 8000470:	68db      	ldr	r3, [r3, #12]
 8000472:	687a      	ldr	r2, [r7, #4]
 8000474:	7912      	ldrb	r2, [r2, #4]
 8000476:	4611      	mov	r1, r2
 8000478:	2201      	movs	r2, #1
 800047a:	408a      	lsls	r2, r1
 800047c:	43d2      	mvns	r2, r2
 800047e:	4611      	mov	r1, r2
 8000480:	4a82      	ldr	r2, [pc, #520]	; (800068c <GPIO_INIT+0x2c8>)
 8000482:	400b      	ands	r3, r1
 8000484:	60d3      	str	r3, [r2, #12]
 8000486:	e019      	b.n	80004bc <GPIO_INIT+0xf8>
			}else if(pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_RFT){
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	795b      	ldrb	r3, [r3, #5]
 800048c:	2b06      	cmp	r3, #6
 800048e:	d115      	bne.n	80004bc <GPIO_INIT+0xf8>
				EXTI->FTSR |= (1 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 8000490:	4b7e      	ldr	r3, [pc, #504]	; (800068c <GPIO_INIT+0x2c8>)
 8000492:	68db      	ldr	r3, [r3, #12]
 8000494:	687a      	ldr	r2, [r7, #4]
 8000496:	7912      	ldrb	r2, [r2, #4]
 8000498:	4611      	mov	r1, r2
 800049a:	2201      	movs	r2, #1
 800049c:	408a      	lsls	r2, r1
 800049e:	4611      	mov	r1, r2
 80004a0:	4a7a      	ldr	r2, [pc, #488]	; (800068c <GPIO_INIT+0x2c8>)
 80004a2:	430b      	orrs	r3, r1
 80004a4:	60d3      	str	r3, [r2, #12]
				EXTI->RTSR |= (1 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 80004a6:	4b79      	ldr	r3, [pc, #484]	; (800068c <GPIO_INIT+0x2c8>)
 80004a8:	689b      	ldr	r3, [r3, #8]
 80004aa:	687a      	ldr	r2, [r7, #4]
 80004ac:	7912      	ldrb	r2, [r2, #4]
 80004ae:	4611      	mov	r1, r2
 80004b0:	2201      	movs	r2, #1
 80004b2:	408a      	lsls	r2, r1
 80004b4:	4611      	mov	r1, r2
 80004b6:	4a75      	ldr	r2, [pc, #468]	; (800068c <GPIO_INIT+0x2c8>)
 80004b8:	430b      	orrs	r3, r1
 80004ba:	6093      	str	r3, [r2, #8]
			}

			uint8_t temp1 = pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber / 4;
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	791b      	ldrb	r3, [r3, #4]
 80004c0:	089b      	lsrs	r3, r3, #2
 80004c2:	74fb      	strb	r3, [r7, #19]
			uint8_t temp2 = pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	791b      	ldrb	r3, [r3, #4]
 80004c8:	f003 0303 	and.w	r3, r3, #3
 80004cc:	74bb      	strb	r3, [r7, #18]
			uint8_t PORTCODE = GPIO_BASE_ADDR_TO_CODE(pGPIO_Handle->pGPIOx);
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	681b      	ldr	r3, [r3, #0]
 80004d2:	4a6f      	ldr	r2, [pc, #444]	; (8000690 <GPIO_INIT+0x2cc>)
 80004d4:	4293      	cmp	r3, r2
 80004d6:	d024      	beq.n	8000522 <GPIO_INIT+0x15e>
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	4a6d      	ldr	r2, [pc, #436]	; (8000694 <GPIO_INIT+0x2d0>)
 80004de:	4293      	cmp	r3, r2
 80004e0:	d01d      	beq.n	800051e <GPIO_INIT+0x15a>
 80004e2:	687b      	ldr	r3, [r7, #4]
 80004e4:	681b      	ldr	r3, [r3, #0]
 80004e6:	4a6c      	ldr	r2, [pc, #432]	; (8000698 <GPIO_INIT+0x2d4>)
 80004e8:	4293      	cmp	r3, r2
 80004ea:	d016      	beq.n	800051a <GPIO_INIT+0x156>
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	681b      	ldr	r3, [r3, #0]
 80004f0:	4a6a      	ldr	r2, [pc, #424]	; (800069c <GPIO_INIT+0x2d8>)
 80004f2:	4293      	cmp	r3, r2
 80004f4:	d00f      	beq.n	8000516 <GPIO_INIT+0x152>
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	4a69      	ldr	r2, [pc, #420]	; (80006a0 <GPIO_INIT+0x2dc>)
 80004fc:	4293      	cmp	r3, r2
 80004fe:	d008      	beq.n	8000512 <GPIO_INIT+0x14e>
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	4a67      	ldr	r2, [pc, #412]	; (80006a4 <GPIO_INIT+0x2e0>)
 8000506:	4293      	cmp	r3, r2
 8000508:	d101      	bne.n	800050e <GPIO_INIT+0x14a>
 800050a:	2307      	movs	r3, #7
 800050c:	e00a      	b.n	8000524 <GPIO_INIT+0x160>
 800050e:	2300      	movs	r3, #0
 8000510:	e008      	b.n	8000524 <GPIO_INIT+0x160>
 8000512:	2304      	movs	r3, #4
 8000514:	e006      	b.n	8000524 <GPIO_INIT+0x160>
 8000516:	2303      	movs	r3, #3
 8000518:	e004      	b.n	8000524 <GPIO_INIT+0x160>
 800051a:	2302      	movs	r3, #2
 800051c:	e002      	b.n	8000524 <GPIO_INIT+0x160>
 800051e:	2301      	movs	r3, #1
 8000520:	e000      	b.n	8000524 <GPIO_INIT+0x160>
 8000522:	2300      	movs	r3, #0
 8000524:	747b      	strb	r3, [r7, #17]
			SYSCFG->EXTICR[temp1] = PORTCODE << (temp2 * 4);                                                                            /*<It is GPIO port output @GPIO_PIN_SPEED register   >*/
 8000526:	7c7a      	ldrb	r2, [r7, #17]
 8000528:	7cbb      	ldrb	r3, [r7, #18]
 800052a:	009b      	lsls	r3, r3, #2
 800052c:	fa02 f103 	lsl.w	r1, r2, r3
 8000530:	4a5d      	ldr	r2, [pc, #372]	; (80006a8 <GPIO_INIT+0x2e4>)
 8000532:	7cfb      	ldrb	r3, [r7, #19]
 8000534:	3302      	adds	r3, #2
 8000536:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

			EXTI->IMR |= 1 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber;
 800053a:	4b54      	ldr	r3, [pc, #336]	; (800068c <GPIO_INIT+0x2c8>)
 800053c:	681b      	ldr	r3, [r3, #0]
 800053e:	687a      	ldr	r2, [r7, #4]
 8000540:	7912      	ldrb	r2, [r2, #4]
 8000542:	4611      	mov	r1, r2
 8000544:	2201      	movs	r2, #1
 8000546:	408a      	lsls	r2, r1
 8000548:	4611      	mov	r1, r2
 800054a:	4a50      	ldr	r2, [pc, #320]	; (800068c <GPIO_INIT+0x2c8>)
 800054c:	430b      	orrs	r3, r1
 800054e:	6013      	str	r3, [r2, #0]
    	    }

    temp = 0;
 8000550:	2300      	movs	r3, #0
 8000552:	617b      	str	r3, [r7, #20]

    // configure the speed
    temp = (pGPIO_Handle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 8000554:	687b      	ldr	r3, [r7, #4]
 8000556:	799b      	ldrb	r3, [r3, #6]
 8000558:	461a      	mov	r2, r3
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	791b      	ldrb	r3, [r3, #4]
 800055e:	005b      	lsls	r3, r3, #1
 8000560:	fa02 f303 	lsl.w	r3, r2, r3
 8000564:	617b      	str	r3, [r7, #20]
    pGPIO_Handle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);                                          /*<It's clearing two bits before writing on it>*/
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	681b      	ldr	r3, [r3, #0]
 800056a:	689a      	ldr	r2, [r3, #8]
 800056c:	687b      	ldr	r3, [r7, #4]
 800056e:	791b      	ldrb	r3, [r3, #4]
 8000570:	4619      	mov	r1, r3
 8000572:	2303      	movs	r3, #3
 8000574:	408b      	lsls	r3, r1
 8000576:	43db      	mvns	r3, r3
 8000578:	4619      	mov	r1, r3
 800057a:	687b      	ldr	r3, [r7, #4]
 800057c:	681b      	ldr	r3, [r3, #0]
 800057e:	400a      	ands	r2, r1
 8000580:	609a      	str	r2, [r3, #8]
    pGPIO_Handle->pGPIOx->OSPEEDR |= temp;
 8000582:	687b      	ldr	r3, [r7, #4]
 8000584:	681b      	ldr	r3, [r3, #0]
 8000586:	6899      	ldr	r1, [r3, #8]
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	681b      	ldr	r3, [r3, #0]
 800058c:	697a      	ldr	r2, [r7, #20]
 800058e:	430a      	orrs	r2, r1
 8000590:	609a      	str	r2, [r3, #8]
    temp = 0;
 8000592:	2300      	movs	r3, #0
 8000594:	617b      	str	r3, [r7, #20]

    //3. configration the pupd
    temp = (pGPIO_Handle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	79db      	ldrb	r3, [r3, #7]
 800059a:	461a      	mov	r2, r3
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	791b      	ldrb	r3, [r3, #4]
 80005a0:	005b      	lsls	r3, r3, #1
 80005a2:	fa02 f303 	lsl.w	r3, r2, r3
 80005a6:	617b      	str	r3, [r7, #20]
    pGPIO_Handle->pGPIOx->PUPDR &= ~(0x3 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);                                            /*<It's clearing two bits before writing on it>*/
 80005a8:	687b      	ldr	r3, [r7, #4]
 80005aa:	681b      	ldr	r3, [r3, #0]
 80005ac:	68da      	ldr	r2, [r3, #12]
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	791b      	ldrb	r3, [r3, #4]
 80005b2:	4619      	mov	r1, r3
 80005b4:	2303      	movs	r3, #3
 80005b6:	408b      	lsls	r3, r1
 80005b8:	43db      	mvns	r3, r3
 80005ba:	4619      	mov	r1, r3
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	681b      	ldr	r3, [r3, #0]
 80005c0:	400a      	ands	r2, r1
 80005c2:	60da      	str	r2, [r3, #12]
    pGPIO_Handle->pGPIOx->PUPDR |= temp;
 80005c4:	687b      	ldr	r3, [r7, #4]
 80005c6:	681b      	ldr	r3, [r3, #0]
 80005c8:	68d9      	ldr	r1, [r3, #12]
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	681b      	ldr	r3, [r3, #0]
 80005ce:	697a      	ldr	r2, [r7, #20]
 80005d0:	430a      	orrs	r2, r1
 80005d2:	60da      	str	r2, [r3, #12]

    //4. configuration the optype.
    temp = 0; 
 80005d4:	2300      	movs	r3, #0
 80005d6:	617b      	str	r3, [r7, #20]
    temp = (pGPIO_Handle->GPIO_PinConfig.GPIO_PinOPType << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	7a1b      	ldrb	r3, [r3, #8]
 80005dc:	461a      	mov	r2, r3
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	791b      	ldrb	r3, [r3, #4]
 80005e2:	fa02 f303 	lsl.w	r3, r2, r3
 80005e6:	617b      	str	r3, [r7, #20]
    pGPIO_Handle->pGPIOx->OTYPER &= ~(0x1 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);                                           /*<It's clearing two bits before writing on it>*/
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	681b      	ldr	r3, [r3, #0]
 80005ec:	685a      	ldr	r2, [r3, #4]
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	791b      	ldrb	r3, [r3, #4]
 80005f2:	4619      	mov	r1, r3
 80005f4:	2301      	movs	r3, #1
 80005f6:	408b      	lsls	r3, r1
 80005f8:	43db      	mvns	r3, r3
 80005fa:	4619      	mov	r1, r3
 80005fc:	687b      	ldr	r3, [r7, #4]
 80005fe:	681b      	ldr	r3, [r3, #0]
 8000600:	400a      	ands	r2, r1
 8000602:	605a      	str	r2, [r3, #4]
    pGPIO_Handle->pGPIOx->OTYPER |= temp;
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	681b      	ldr	r3, [r3, #0]
 8000608:	6859      	ldr	r1, [r3, #4]
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	681b      	ldr	r3, [r3, #0]
 800060e:	697a      	ldr	r2, [r7, #20]
 8000610:	430a      	orrs	r2, r1
 8000612:	605a      	str	r2, [r3, #4]

    // 5. configure the alt function reg
    if(pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 8000614:	687b      	ldr	r3, [r7, #4]
 8000616:	795b      	ldrb	r3, [r3, #5]
 8000618:	2b02      	cmp	r3, #2
 800061a:	d131      	bne.n	8000680 <GPIO_INIT+0x2bc>
        uint8_t temp1, temp2;
        temp1 = pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	791b      	ldrb	r3, [r3, #4]
 8000620:	08db      	lsrs	r3, r3, #3
 8000622:	743b      	strb	r3, [r7, #16]
        temp2 = pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	791b      	ldrb	r3, [r3, #4]
 8000628:	f003 0307 	and.w	r3, r3, #7
 800062c:	73fb      	strb	r3, [r7, #15]
        pGPIO_Handle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));                                                                   /*<It's clearing two bits before writing on it>*/
 800062e:	687b      	ldr	r3, [r7, #4]
 8000630:	681b      	ldr	r3, [r3, #0]
 8000632:	7c3a      	ldrb	r2, [r7, #16]
 8000634:	3208      	adds	r2, #8
 8000636:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800063a:	7bfb      	ldrb	r3, [r7, #15]
 800063c:	009b      	lsls	r3, r3, #2
 800063e:	220f      	movs	r2, #15
 8000640:	fa02 f303 	lsl.w	r3, r2, r3
 8000644:	43db      	mvns	r3, r3
 8000646:	4618      	mov	r0, r3
 8000648:	687b      	ldr	r3, [r7, #4]
 800064a:	681b      	ldr	r3, [r3, #0]
 800064c:	7c3a      	ldrb	r2, [r7, #16]
 800064e:	4001      	ands	r1, r0
 8000650:	3208      	adds	r2, #8
 8000652:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
        pGPIO_Handle->pGPIOx->AFR[temp1] |= (pGPIO_Handle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 8000656:	687b      	ldr	r3, [r7, #4]
 8000658:	681b      	ldr	r3, [r3, #0]
 800065a:	7c3a      	ldrb	r2, [r7, #16]
 800065c:	3208      	adds	r2, #8
 800065e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000662:	687b      	ldr	r3, [r7, #4]
 8000664:	7a5b      	ldrb	r3, [r3, #9]
 8000666:	461a      	mov	r2, r3
 8000668:	7bfb      	ldrb	r3, [r7, #15]
 800066a:	009b      	lsls	r3, r3, #2
 800066c:	fa02 f303 	lsl.w	r3, r2, r3
 8000670:	4618      	mov	r0, r3
 8000672:	687b      	ldr	r3, [r7, #4]
 8000674:	681b      	ldr	r3, [r3, #0]
 8000676:	7c3a      	ldrb	r2, [r7, #16]
 8000678:	4301      	orrs	r1, r0
 800067a:	3208      	adds	r2, #8
 800067c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

    }
}
 8000680:	bf00      	nop
 8000682:	371c      	adds	r7, #28
 8000684:	46bd      	mov	sp, r7
 8000686:	bc80      	pop	{r7}
 8000688:	4770      	bx	lr
 800068a:	bf00      	nop
 800068c:	40013c00 	.word	0x40013c00
 8000690:	40020000 	.word	0x40020000
 8000694:	40020400 	.word	0x40020400
 8000698:	40020800 	.word	0x40020800
 800069c:	40020c00 	.word	0x40020c00
 80006a0:	40021000 	.word	0x40021000
 80006a4:	40021c00 	.word	0x40021c00
 80006a8:	40013800 	.word	0x40013800

080006ac <GPIO_ToggleOutputPin>:
	pGPIOx->ODR = Value;
}


void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80006ac:	b480      	push	{r7}
 80006ae:	b083      	sub	sp, #12
 80006b0:	af00      	add	r7, sp, #0
 80006b2:	6078      	str	r0, [r7, #4]
 80006b4:	460b      	mov	r3, r1
 80006b6:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1<< PinNumber);
 80006b8:	687b      	ldr	r3, [r7, #4]
 80006ba:	695b      	ldr	r3, [r3, #20]
 80006bc:	78fa      	ldrb	r2, [r7, #3]
 80006be:	2101      	movs	r1, #1
 80006c0:	fa01 f202 	lsl.w	r2, r1, r2
 80006c4:	405a      	eors	r2, r3
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	615a      	str	r2, [r3, #20]
}
 80006ca:	bf00      	nop
 80006cc:	370c      	adds	r7, #12
 80006ce:	46bd      	mov	sp, r7
 80006d0:	bc80      	pop	{r7}
 80006d2:	4770      	bx	lr

080006d4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80006d4:	480d      	ldr	r0, [pc, #52]	; (800070c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80006d6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80006d8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80006dc:	480c      	ldr	r0, [pc, #48]	; (8000710 <LoopForever+0x6>)
  ldr r1, =_edata
 80006de:	490d      	ldr	r1, [pc, #52]	; (8000714 <LoopForever+0xa>)
  ldr r2, =_sidata
 80006e0:	4a0d      	ldr	r2, [pc, #52]	; (8000718 <LoopForever+0xe>)
  movs r3, #0
 80006e2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80006e4:	e002      	b.n	80006ec <LoopCopyDataInit>

080006e6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80006e6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80006e8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80006ea:	3304      	adds	r3, #4

080006ec <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80006ec:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80006ee:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80006f0:	d3f9      	bcc.n	80006e6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80006f2:	4a0a      	ldr	r2, [pc, #40]	; (800071c <LoopForever+0x12>)
  ldr r4, =_ebss
 80006f4:	4c0a      	ldr	r4, [pc, #40]	; (8000720 <LoopForever+0x16>)
  movs r3, #0
 80006f6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80006f8:	e001      	b.n	80006fe <LoopFillZerobss>

080006fa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80006fa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80006fc:	3204      	adds	r2, #4

080006fe <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80006fe:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000700:	d3fb      	bcc.n	80006fa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000702:	f000 f811 	bl	8000728 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000706:	f7ff fd79 	bl	80001fc <main>

0800070a <LoopForever>:

LoopForever:
    b LoopForever
 800070a:	e7fe      	b.n	800070a <LoopForever>
  ldr   r0, =_estack
 800070c:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8000710:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000714:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000718:	08000790 	.word	0x08000790
  ldr r2, =_sbss
 800071c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000720:	2000001c 	.word	0x2000001c

08000724 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000724:	e7fe      	b.n	8000724 <ADC_IRQHandler>
	...

08000728 <__libc_init_array>:
 8000728:	b570      	push	{r4, r5, r6, lr}
 800072a:	4d0d      	ldr	r5, [pc, #52]	; (8000760 <__libc_init_array+0x38>)
 800072c:	4c0d      	ldr	r4, [pc, #52]	; (8000764 <__libc_init_array+0x3c>)
 800072e:	1b64      	subs	r4, r4, r5
 8000730:	10a4      	asrs	r4, r4, #2
 8000732:	2600      	movs	r6, #0
 8000734:	42a6      	cmp	r6, r4
 8000736:	d109      	bne.n	800074c <__libc_init_array+0x24>
 8000738:	4d0b      	ldr	r5, [pc, #44]	; (8000768 <__libc_init_array+0x40>)
 800073a:	4c0c      	ldr	r4, [pc, #48]	; (800076c <__libc_init_array+0x44>)
 800073c:	f000 f818 	bl	8000770 <_init>
 8000740:	1b64      	subs	r4, r4, r5
 8000742:	10a4      	asrs	r4, r4, #2
 8000744:	2600      	movs	r6, #0
 8000746:	42a6      	cmp	r6, r4
 8000748:	d105      	bne.n	8000756 <__libc_init_array+0x2e>
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000750:	4798      	blx	r3
 8000752:	3601      	adds	r6, #1
 8000754:	e7ee      	b.n	8000734 <__libc_init_array+0xc>
 8000756:	f855 3b04 	ldr.w	r3, [r5], #4
 800075a:	4798      	blx	r3
 800075c:	3601      	adds	r6, #1
 800075e:	e7f2      	b.n	8000746 <__libc_init_array+0x1e>
 8000760:	08000788 	.word	0x08000788
 8000764:	08000788 	.word	0x08000788
 8000768:	08000788 	.word	0x08000788
 800076c:	0800078c 	.word	0x0800078c

08000770 <_init>:
 8000770:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000772:	bf00      	nop
 8000774:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000776:	bc08      	pop	{r3}
 8000778:	469e      	mov	lr, r3
 800077a:	4770      	bx	lr

0800077c <_fini>:
 800077c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800077e:	bf00      	nop
 8000780:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000782:	bc08      	pop	{r3}
 8000784:	469e      	mov	lr, r3
 8000786:	4770      	bx	lr
